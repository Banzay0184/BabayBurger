#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ –ø—Ä–æ–±–ª–µ–º —Å Django
"""

import os
import sys
import subprocess
import django
from pathlib import Path

def check_environment():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –æ–∫—Ä—É–∂–µ–Ω–∏–µ"""
    print("üîç –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê DJANGO")
    print("=" * 50)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º Python
    print(f"üêç Python –≤–µ—Ä—Å–∏—è: {sys.version}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é
    print(f"üìÅ –¢–µ–∫—É—â–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: {os.getcwd()}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ manage.py
    manage_py = Path('manage.py')
    if manage_py.exists():
        print("‚úÖ manage.py –Ω–∞–π–¥–µ–Ω")
    else:
        print("‚ùå manage.py –Ω–µ –Ω–∞–π–¥–µ–Ω")
        return False
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º .env —Ñ–∞–π–ª
    env_file = Path('.env')
    if env_file.exists():
        print("‚úÖ .env —Ñ–∞–π–ª –Ω–∞–π–¥–µ–Ω")
    else:
        print("‚ö†Ô∏è  .env —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω")
    
    return True

def check_django_settings():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Django"""
    print("\n‚öôÔ∏è  –ü–†–û–í–ï–†–ö–ê –ù–ê–°–¢–†–û–ï–ö DJANGO")
    print("=" * 50)
    
    try:
        # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º Django
        os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'config.settings')
        django.setup()
        
        from django.conf import settings
        
        print("‚úÖ Django –Ω–∞—Å—Ç—Ä–æ–µ–Ω —É—Å–ø–µ—à–Ω–æ")
        print(f"üìä DEBUG: {settings.DEBUG}")
        print(f"üìä ALLOWED_HOSTS: {settings.ALLOWED_HOSTS}")
        print(f"üìä DATABASES: {list(settings.DATABASES.keys())}")
        
        return True
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Django: {e}")
        return False

def check_database():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö"""
    print("\nüóÑÔ∏è  –ü–†–û–í–ï–†–ö–ê –ë–ê–ó–´ –î–ê–ù–ù–´–•")
    print("=" * 50)
    
    try:
        from django.core.management import execute_from_command_line
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –º–∏–≥—Ä–∞—Ü–∏–∏
        result = subprocess.run([
            sys.executable, 'manage.py', 'showmigrations'
        ], capture_output=True, text=True)
        
        if result.returncode == 0:
            print("‚úÖ –ú–∏–≥—Ä–∞—Ü–∏–∏ –ø—Ä–æ–≤–µ—Ä–µ–Ω—ã")
            print(result.stdout)
        else:
            print("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –º–∏–≥—Ä–∞—Ü–∏–π")
            print(result.stderr)
            return False
        
        return True
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö: {e}")
        return False

def check_models():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –º–æ–¥–µ–ª–∏"""
    print("\nüìä –ü–†–û–í–ï–†–ö–ê –ú–û–î–ï–õ–ï–ô")
    print("=" * 50)
    
    try:
        from api.models import User, Category, MenuItem, Order
        
        print("‚úÖ –ú–æ–¥–µ–ª–∏ –∑–∞–≥—Ä—É–∂–µ–Ω—ã:")
        print(f"   - User: {User}")
        print(f"   - Category: {Category}")
        print(f"   - MenuItem: {MenuItem}")
        print(f"   - Order: {Order}")
        
        return True
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –º–æ–¥–µ–ª–µ–π: {e}")
        return False

def check_urls():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç URL –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é"""
    print("\nüîó –ü–†–û–í–ï–†–ö–ê URL")
    print("=" * 50)
    
    try:
        from django.urls import get_resolver
        
        resolver = get_resolver()
        print("‚úÖ URL resolver –Ω–∞—Å—Ç—Ä–æ–µ–Ω")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ URL
        urls_to_check = [
            '/admin/',
            '/api/auth/',
            '/api/menu/',
            '/api/orders/',
            '/api/webhook/',
        ]
        
        for url in urls_to_check:
            try:
                resolver.resolve(url)
                print(f"   ‚úÖ {url}")
            except Exception as e:
                print(f"   ‚ùå {url}: {e}")
        
        return True
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ URL: {e}")
        return False

def test_server_start():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –∑–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞"""
    print("\nüöÄ –¢–ï–°–¢ –ó–ê–ü–£–°–ö–ê –°–ï–†–í–ï–†–ê")
    print("=" * 50)
    
    try:
        # –ó–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Ä–≤–µ—Ä –≤ —Ñ–æ–Ω–æ–≤–æ–º —Ä–µ–∂–∏–º–µ
        process = subprocess.Popen([
            sys.executable, 'manage.py', 'runserver', '0.0.0.0:8000'
        ], stdout=subprocess.PIPE, stderr=subprocess.PIPE)
        
        # –ñ–¥–µ–º –Ω–µ–º–Ω–æ–≥–æ
        import time
        time.sleep(3)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø—Ä–æ—Ü–µ—Å—Å –∑–∞–ø—É—â–µ–Ω
        if process.poll() is None:
            print("‚úÖ –°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω —É—Å–ø–µ—à–Ω–æ")
            process.terminate()
            process.wait()
            return True
        else:
            stdout, stderr = process.communicate()
            print("‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞:")
            print(f"STDOUT: {stdout.decode()}")
            print(f"STDERR: {stderr.decode()}")
            return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å–µ—Ä–≤–µ—Ä–∞: {e}")
        return False

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üîß –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê DJANGO –°–ï–†–í–ï–†–ê")
    print("=" * 50)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–∫—Ä—É–∂–µ–Ω–∏–µ
    if not check_environment():
        print("\n‚ùå –ü—Ä–æ–±–ª–µ–º—ã —Å –æ–∫—Ä—É–∂–µ–Ω–∏–µ–º")
        return False
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Django
    if not check_django_settings():
        print("\n‚ùå –ü—Ä–æ–±–ª–µ–º—ã —Å –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏ Django")
        return False
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
    if not check_database():
        print("\n‚ùå –ü—Ä–æ–±–ª–µ–º—ã —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö")
        return False
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –º–æ–¥–µ–ª–∏
    if not check_models():
        print("\n‚ùå –ü—Ä–æ–±–ª–µ–º—ã —Å –º–æ–¥–µ–ª—è–º–∏")
        return False
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º URL
    if not check_urls():
        print("\n‚ùå –ü—Ä–æ–±–ª–µ–º—ã —Å URL")
        return False
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –∑–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞
    if not test_server_start():
        print("\n‚ùå –ü—Ä–æ–±–ª–µ–º—ã —Å –∑–∞–ø—É—Å–∫–æ–º —Å–µ—Ä–≤–µ—Ä–∞")
        return False
    
    print("\n‚úÖ –í—Å–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–æ–π–¥–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!")
    print("üöÄ Django —Å–µ—Ä–≤–µ—Ä –≥–æ—Ç–æ–≤ –∫ –∑–∞–ø—É—Å–∫—É")
    
    return True

if __name__ == '__main__':
    main() 