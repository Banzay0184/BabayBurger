#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞ Django —Å –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–º–∏ CORS –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏
"""

import os
import sys
import subprocess
import signal
import time
import psutil

def find_django_process():
    """–ù–∞—Ö–æ–¥–∏–º –ø—Ä–æ—Ü–µ—Å—Å Django"""
    for proc in psutil.process_iter(['pid', 'name', 'cmdline']):
        try:
            if 'manage.py' in ' '.join(proc.info['cmdline'] or []):
                return proc
        except (psutil.NoSuchProcess, psutil.AccessDenied):
            continue
    return None

def stop_django():
    """–û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Django –ø—Ä–æ—Ü–µ—Å—Å"""
    print("üõë –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Django...")
    
    django_proc = find_django_process()
    if django_proc:
        print(f"–ù–∞–π–¥–µ–Ω –ø—Ä–æ—Ü–µ—Å—Å Django (PID: {django_proc.pid})")
        try:
            django_proc.terminate()
            django_proc.wait(timeout=10)
            print("‚úÖ Django –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
        except psutil.TimeoutExpired:
            print("‚ö†Ô∏è –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ Django...")
            django_proc.kill()
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ Django: {e}")
    else:
        print("‚ÑπÔ∏è Django –ø—Ä–æ—Ü–µ—Å—Å –Ω–µ –Ω–∞–π–¥–µ–Ω")

def start_django():
    """–ó–∞–ø—É—Å–∫–∞–µ–º Django —Å –Ω–æ–≤—ã–º–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏"""
    print("üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º Django —Å –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–º–∏ CORS –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏...")
    
    try:
        # –ó–∞–ø—É—Å–∫–∞–µ–º Django –≤ —Ñ–æ–Ω–æ–≤–æ–º —Ä–µ–∂–∏–º–µ
        process = subprocess.Popen([
            'python', 'manage.py', 'runserver', '0.0.0.0:8000'
        ], cwd=os.getcwd())
        
        print(f"‚úÖ Django –∑–∞–ø—É—â–µ–Ω (PID: {process.pid})")
        print("üåê –°–µ—Ä–≤–µ—Ä –¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ –∞–¥—Ä–µ—Å—É: http://localhost:8000")
        print("üîó Ngrok —Ç—É–Ω–Ω–µ–ª—å: https://ec5b3f679bd2.ngrok-free.app")
        
        return process
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ Django: {e}")
        return None

def test_api_connection():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ API"""
    print("\nüß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ API...")
    
    import requests
    
    try:
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–π —Å–µ—Ä–≤–µ—Ä
        local_response = requests.get('http://localhost:8000/api/auth/test/', timeout=5)
        print(f"‚úÖ –õ–æ–∫–∞–ª—å–Ω—ã–π API: {local_response.status_code}")
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º —á–µ—Ä–µ–∑ ngrok
        ngrok_response = requests.get(
            'https://ec5b3f679bd2.ngrok-free.app/api/auth/test/',
            headers={'ngrok-skip-browser-warning': 'true'},
            timeout=10
        )
        print(f"‚úÖ Ngrok API: {ngrok_response.status_code}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º CORS –∑–∞–≥–æ–ª–æ–≤–∫–∏
        print("üìã CORS –∑–∞–≥–æ–ª–æ–≤–∫–∏:")
        for header, value in ngrok_response.headers.items():
            if 'access-control' in header.lower():
                print(f"  {header}: {value}")
                
    except requests.exceptions.RequestException as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ API: {e}")

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ Django —Å –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–º–∏ CORS –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏...")
    
    # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å—Ç–∞—Ä—ã–π –ø—Ä–æ—Ü–µ—Å—Å
    stop_django()
    
    # –ñ–¥–µ–º –Ω–µ–º–Ω–æ–≥–æ
    time.sleep(2)
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º –Ω–æ–≤—ã–π –ø—Ä–æ—Ü–µ—Å—Å
    django_process = start_django()
    
    if django_process:
        # –ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞
        time.sleep(5)
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ
        test_api_connection()
        
        print("\n‚úÖ Django –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω —Å –Ω–æ–≤—ã–º–∏ CORS –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏!")
        print("üîß –¢–µ–ø–µ—Ä—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –Ω–∞ Vercel –¥–æ–ª–∂–Ω–æ —Ä–∞–±–æ—Ç–∞—Ç—å –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
        
        # –î–µ—Ä–∂–∏–º –ø—Ä–æ—Ü–µ—Å—Å –∞–∫—Ç–∏–≤–Ω—ã–º
        try:
            django_process.wait()
        except KeyboardInterrupt:
            print("\nüõë –ü–æ–ª—É—á–µ–Ω —Å–∏–≥–Ω–∞–ª –æ—Å—Ç–∞–Ω–æ–≤–∫–∏...")
            django_process.terminate()
            print("‚úÖ Django –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")

if __name__ == "__main__":
    main() 