#!/usr/bin/env python3
"""
–¢–µ—Å—Ç —É–Ω–∏–∫–∞–ª—å–Ω–æ—Å—Ç–∏ –∞–¥—Ä–µ—Å–æ–≤
–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –Ω–µ –º–æ–≥—É—Ç —Å–æ–∑–¥–∞–≤–∞—Ç—å –¥—É–±–ª–∏—Ä—É—é—â–∏–µ—Å—è –∞–¥—Ä–µ—Å–∞
"""

import os
import sys
import django
import requests

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Django
sys.path.append(os.path.dirname(os.path.abspath(__file__)))
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'config.settings')
django.setup()

from api.models import User, Address
from django.db import IntegrityError

def test_address_uniqueness():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —É–Ω–∏–∫–∞–ª—å–Ω–æ—Å—Ç—å –∞–¥—Ä–µ—Å–æ–≤"""
    print("üè† –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —É–Ω–∏–∫–∞–ª—å–Ω–æ—Å—Ç–∏ –∞–¥—Ä–µ—Å–æ–≤...")
    
    # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    user, created = User.objects.get_or_create(
        telegram_id=111111111,
        defaults={'username': 'test_uniqueness_user', 'first_name': 'Test Uniqueness User'}
    )
    
    # –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –∞–¥—Ä–µ—Å–∞
    address_data = {
        'street': '–¢–µ—Å—Ç–æ–≤–∞—è —É–ª–∏—Ü–∞',
        'house_number': '1',
        'apartment': '10',
        'city': '–¢–∞—à–∫–µ–Ω—Ç',
        'phone_number': '+998 90 123 45 67',
        'is_primary': True
    }
    
    print(f"‚úÖ –°–æ–∑–¥–∞–Ω —Ç–µ—Å—Ç–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {user.telegram_id}")
    
    # –¢–µ—Å—Ç 1: –°–æ–∑–¥–∞–Ω–∏–µ –ø–µ—Ä–≤–æ–≥–æ –∞–¥—Ä–µ—Å–∞
    print("\nüìã –¢–µ—Å—Ç 1: –°–æ–∑–¥–∞–Ω–∏–µ –ø–µ—Ä–≤–æ–≥–æ –∞–¥—Ä–µ—Å–∞")
    try:
        address1 = Address.objects.create(user=user, **address_data)
        print(f"   ‚úÖ –ê–¥—Ä–µ—Å —Å–æ–∑–¥–∞–Ω: {address1.full_address}")
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∞–¥—Ä–µ—Å–∞: {e}")
        return
    
    # –¢–µ—Å—Ç 2: –ü–æ–ø—ã—Ç–∫–∞ —Å–æ–∑–¥–∞—Ç—å –¥—É–±–ª–∏—Ä—É—é—â–∏–π –∞–¥—Ä–µ—Å
    print("\nüìã –¢–µ—Å—Ç 2: –ü–æ–ø—ã—Ç–∫–∞ —Å–æ–∑–¥–∞—Ç—å –¥—É–±–ª–∏—Ä—É—é—â–∏–π –∞–¥—Ä–µ—Å")
    try:
        address2 = Address.objects.create(user=user, **address_data)
        print(f"   ‚ùå –î—É–±–ª–∏—Ä—É—é—â–∏–π –∞–¥—Ä–µ—Å —Å–æ–∑–¥–∞–Ω: {address2.full_address}")
        address2.delete()
    except IntegrityError as e:
        print(f"   ‚úÖ –î—É–±–ª–∏—Ä—É—é—â–∏–π –∞–¥—Ä–µ—Å –ø—Ä–∞–≤–∏–ª—å–Ω–æ –æ—Ç–∫–ª–æ–Ω–µ–Ω: {e}")
    except Exception as e:
        print(f"   ‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: {e}")
    
    # –¢–µ—Å—Ç 3: –ü–æ–ø—ã—Ç–∫–∞ —Å–æ–∑–¥–∞—Ç—å –∞–¥—Ä–µ—Å —Å –¥—Ä—É–≥–∏–º –Ω–æ–º–µ—Ä–æ–º –∫–≤–∞—Ä—Ç–∏—Ä—ã
    print("\nüìã –¢–µ—Å—Ç 3: –°–æ–∑–¥–∞–Ω–∏–µ –∞–¥—Ä–µ—Å–∞ —Å –¥—Ä—É–≥–∏–º –Ω–æ–º–µ—Ä–æ–º –∫–≤–∞—Ä—Ç–∏—Ä—ã")
    try:
        address_data_different_apt = address_data.copy()
        address_data_different_apt['apartment'] = '20'
        address3 = Address.objects.create(user=user, **address_data_different_apt)
        print(f"   ‚úÖ –ê–¥—Ä–µ—Å —Å –¥—Ä—É–≥–æ–π –∫–≤–∞—Ä—Ç–∏—Ä–æ–π —Å–æ–∑–¥–∞–Ω: {address3.full_address}")
        address3.delete()
    except IntegrityError as e:
        print(f"   ‚ùå –ê–¥—Ä–µ—Å —Å –¥—Ä—É–≥–æ–π –∫–≤–∞—Ä—Ç–∏—Ä–æ–π –æ—Ç–∫–ª–æ–Ω–µ–Ω: {e}")
    except Exception as e:
        print(f"   ‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: {e}")
    
    # –¢–µ—Å—Ç 4: –ü–æ–ø—ã—Ç–∫–∞ —Å–æ–∑–¥–∞—Ç—å –∞–¥—Ä–µ—Å —Å –¥—Ä—É–≥–∏–º –Ω–æ–º–µ—Ä–æ–º –¥–æ–º–∞
    print("\nüìã –¢–µ—Å—Ç 4: –°–æ–∑–¥–∞–Ω–∏–µ –∞–¥—Ä–µ—Å–∞ —Å –¥—Ä—É–≥–∏–º –Ω–æ–º–µ—Ä–æ–º –¥–æ–º–∞")
    try:
        address_data_different_house = address_data.copy()
        address_data_different_house['house_number'] = '2'
        address4 = Address.objects.create(user=user, **address_data_different_house)
        print(f"   ‚úÖ –ê–¥—Ä–µ—Å —Å –¥—Ä—É–≥–∏–º –¥–æ–º–æ–º —Å–æ–∑–¥–∞–Ω: {address4.full_address}")
        address4.delete()
    except IntegrityError as e:
        print(f"   ‚ùå –ê–¥—Ä–µ—Å —Å –¥—Ä—É–≥–∏–º –¥–æ–º–æ–º –æ—Ç–∫–ª–æ–Ω–µ–Ω: {e}")
    except Exception as e:
        print(f"   ‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: {e}")
    
    # –¢–µ—Å—Ç 5: –ü–æ–ø—ã—Ç–∫–∞ —Å–æ–∑–¥–∞—Ç—å –∞–¥—Ä–µ—Å —Å –¥—Ä—É–≥–æ–π —É–ª–∏—Ü–µ–π
    print("\nüìã –¢–µ—Å—Ç 5: –°–æ–∑–¥–∞–Ω–∏–µ –∞–¥—Ä–µ—Å–∞ —Å –¥—Ä—É–≥–æ–π —É–ª–∏—Ü–µ–π")
    try:
        address_data_different_street = address_data.copy()
        address_data_different_street['street'] = '–î—Ä—É–≥–∞—è —É–ª–∏—Ü–∞'
        address5 = Address.objects.create(user=user, **address_data_different_street)
        print(f"   ‚úÖ –ê–¥—Ä–µ—Å —Å –¥—Ä—É–≥–æ–π —É–ª–∏—Ü–µ–π —Å–æ–∑–¥–∞–Ω: {address5.full_address}")
        address5.delete()
    except IntegrityError as e:
        print(f"   ‚ùå –ê–¥—Ä–µ—Å —Å –¥—Ä—É–≥–æ–π —É–ª–∏—Ü–µ–π –æ—Ç–∫–ª–æ–Ω–µ–Ω: {e}")
    except Exception as e:
        print(f"   ‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: {e}")
    
    # –¢–µ—Å—Ç 6: –°–æ–∑–¥–∞–Ω–∏–µ –∞–¥—Ä–µ—Å–∞ –¥—Ä—É–≥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º
    print("\nüìã –¢–µ—Å—Ç 6: –°–æ–∑–¥–∞–Ω–∏–µ –∞–¥—Ä–µ—Å–∞ –¥—Ä—É–≥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
    try:
        user2, created = User.objects.get_or_create(
            telegram_id=222222222,
            defaults={'username': 'test_uniqueness_user2', 'first_name': 'Test Uniqueness User2'}
        )
        
        address6 = Address.objects.create(user=user2, **address_data)
        print(f"   ‚úÖ –ê–¥—Ä–µ—Å —Å–æ–∑–¥–∞–Ω –¥–ª—è –¥—Ä—É–≥–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {address6.full_address}")
        address6.delete()
        user2.delete()
    except IntegrityError as e:
        print(f"   ‚ùå –ê–¥—Ä–µ—Å –¥–ª—è –¥—Ä—É–≥–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –æ—Ç–∫–ª–æ–Ω–µ–Ω: {e}")
    except Exception as e:
        print(f"   ‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: {e}")
    
    # –¢–µ—Å—Ç 7: API —Ç–µ—Å—Ç —á–µ—Ä–µ–∑ HTTP –∑–∞–ø—Ä–æ—Å—ã
    print("\nüìã –¢–µ—Å—Ç 7: API —Ç–µ—Å—Ç –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏—è –∞–¥—Ä–µ—Å–æ–≤")
    base_url = "http://localhost:8000/api"
    
    # –°–æ–∑–¥–∞–µ–º –∞–¥—Ä–µ—Å —á–µ—Ä–µ–∑ API
    api_address_data = {
        'telegram_id': user.telegram_id,
        'street': 'API –¢–µ—Å—Ç–æ–≤–∞—è —É–ª–∏—Ü–∞',
        'house_number': '5',
        'apartment': '15',
        'city': '–¢–∞—à–∫–µ–Ω—Ç',
        'phone_number': '+998 91 123 45 67',
        'is_primary': False
    }
    
    response1 = requests.post(f"{base_url}/addresses/", json=api_address_data)
    if response1.status_code == 201:
        print("   ‚úÖ –ü–µ—Ä–≤—ã–π –∞–¥—Ä–µ—Å —Å–æ–∑–¥–∞–Ω —á–µ—Ä–µ–∑ API")
        
        # –ü—ã—Ç–∞–µ–º—Å—è —Å–æ–∑–¥–∞—Ç—å –¥—É–±–ª–∏—Ä—É—é—â–∏–π –∞–¥—Ä–µ—Å
        response2 = requests.post(f"{base_url}/addresses/", json=api_address_data)
        if response2.status_code == 400:
            print("   ‚úÖ –î—É–±–ª–∏—Ä—É—é—â–∏–π –∞–¥—Ä–µ—Å –æ—Ç–∫–ª–æ–Ω–µ–Ω —á–µ—Ä–µ–∑ API")
        else:
            print(f"   ‚ùå –î—É–±–ª–∏—Ä—É—é—â–∏–π –∞–¥—Ä–µ—Å –Ω–µ –æ—Ç–∫–ª–æ–Ω–µ–Ω: {response2.status_code}")
    else:
        print(f"   ‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∞–¥—Ä–µ—Å–∞ —á–µ—Ä–µ–∑ API: {response1.status_code}")
    
    print("\nüéØ –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —É–Ω–∏–∫–∞–ª—å–Ω–æ—Å—Ç–∏:")
    print("   ‚úÖ –î—É–±–ª–∏—Ä—É—é—â–∏–µ—Å—è –∞–¥—Ä–µ—Å–∞ –±–ª–æ–∫–∏—Ä—É—é—Ç—Å—è –Ω–∞ —É—Ä–æ–≤–Ω–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö")
    print("   ‚úÖ –ê–¥—Ä–µ—Å–∞ —Å —Ä–∞–∑–Ω—ã–º–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏ —Å–æ–∑–¥–∞—é—Ç—Å—è —É—Å–ø–µ—à–Ω–æ")
    print("   ‚úÖ –†–∞–∑–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –º–æ–≥—É—Ç –∏–º–µ—Ç—å –æ–¥–∏–Ω–∞–∫–æ–≤—ã–µ –∞–¥—Ä–µ—Å–∞")
    print("   ‚úÖ API –ø—Ä–∞–≤–∏–ª—å–Ω–æ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏–µ")
    
    # –û—á–∏—Å—Ç–∫–∞ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö
    Address.objects.filter(user=user).delete()
    user.delete()
    print("\nüßπ –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –æ—á–∏—â–µ–Ω—ã")

if __name__ == "__main__":
    test_address_uniqueness() 