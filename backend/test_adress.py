#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ç–µ—Å—Ç–æ–≤—ã—Ö –∞–¥—Ä–µ—Å–æ–≤
"""

import os
import sys
import django
from pathlib import Path

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Django
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'config.settings')
django.setup()

from api.models import User, Address

def create_test_addresses():
    """–°–æ–∑–¥–∞–µ—Ç —Ç–µ—Å—Ç–æ–≤—ã–µ –∞–¥—Ä–µ—Å–∞"""
    print("üè† –°–û–ó–î–ê–ù–ò–ï –¢–ï–°–¢–û–í–´–• –ê–î–†–ï–°–û–í")
    print("=" * 50)
    
    try:
        # –ü–æ–ª—É—á–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        users = User.objects.all()
        
        if not users.exists():
            print("‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
            print("üí° –°–Ω–∞—á–∞–ª–∞ —Å–æ–∑–¥–∞–π—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —á–µ—Ä–µ–∑ –±–æ—Ç–∞")
            return False
        
        # –¢–µ—Å—Ç–æ–≤—ã–µ –∞–¥—Ä–µ—Å–∞ –¥–ª—è –¢–∞—à–∫–µ–Ω—Ç–∞
        test_addresses = [
            {
                'street': '–ê–º–∏—Ä –¢–µ–º—É—Ä',
                'house_number': '123',
                'apartment': '45',
                'city': '–¢–∞—à–∫–µ–Ω—Ç',
                'latitude': 41.2995,
                'longitude': 69.2401,
                'phone_number': '+998901234567',
                'comment': '–û–∫–æ–ª–æ –º–µ—Ç—Ä–æ –ê–º–∏—Ä –¢–µ–º—É—Ä'
            },
            {
                'street': '–ß–∏–ª–∞–Ω–∑–∞—Ä',
                'house_number': '78',
                'apartment': '12',
                'city': '–¢–∞—à–∫–µ–Ω—Ç',
                'latitude': 41.2847,
                'longitude': 69.2045,
                'phone_number': '+998901234568',
                'comment': '–†—è–¥–æ–º —Å –ø–∞—Ä–∫–æ–º'
            },
            {
                'street': '–°–µ—Ä–≥–µ–ª–∏',
                'house_number': '15',
                'apartment': '3',
                'city': '–¢–∞—à–∫–µ–Ω—Ç',
                'latitude': 41.2750,
                'longitude': 69.2150,
                'phone_number': '+998901234569',
                'comment': '–£–ª–∏—Ü–∞ —Å —Ö–æ—Ä–æ—à–∏–º –¥–æ—Å—Ç—É–ø–æ–º'
            }
        ]
        
        created_count = 0
        for user in users:
            for i, address_data in enumerate(test_addresses):
                # –ü–µ—Ä–≤—ã–π –∞–¥—Ä–µ—Å –¥–µ–ª–∞–µ–º –æ—Å–Ω–æ–≤–Ω—ã–º
                address_data['is_primary'] = (i == 0)
                
                address, created = Address.objects.get_or_create(
                    user=user,
                    street=address_data['street'],
                    house_number=address_data['house_number'],
                    defaults=address_data
                )
                
                if created:
                    print(f"‚úÖ –°–æ–∑–¥–∞–Ω –∞–¥—Ä–µ—Å –¥–ª—è {user.first_name}: {address.full_address}")
                    created_count += 1
                else:
                    print(f"‚è≠Ô∏è  –ê–¥—Ä–µ—Å —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç: {address.full_address}")
        
        print(f"\n‚úÖ –°–æ–∑–¥–∞–Ω–æ –∞–¥—Ä–µ—Å–æ–≤: {created_count}")
        print(f"‚úÖ –í—Å–µ–≥–æ –∞–¥—Ä–µ—Å–æ–≤ –≤ –±–∞–∑–µ: {Address.objects.count()}")
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∞–¥—Ä–µ—Å–æ–≤: {e}")
        return False

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üè† –ù–ê–°–¢–†–û–ô–ö–ê –ê–î–†–ï–°–û–í")
    print("=" * 50)
    
    if create_test_addresses():
        print("\nüéâ –ê–¥—Ä–µ—Å–∞ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω—ã!")
        print("üìã –ß—Ç–æ –≥–æ—Ç–æ–≤–æ:")
        print("   ‚úÖ –ú–æ–¥–µ–ª—å Address —Å–æ–∑–¥–∞–Ω–∞")
        print("   ‚úÖ API endpoints –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã")
        print("   ‚úÖ –¢–µ—Å—Ç–æ–≤—ã–µ –∞–¥—Ä–µ—Å–∞ –¥–æ–±–∞–≤–ª–µ–Ω—ã")
        print("\nÔøΩÔøΩ –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:")
        print("   1. –ü—Ä–∏–º–µ–Ω–∏—Ç–µ –º–∏–≥—Ä–∞—Ü–∏–∏: python manage.py migrate")
        print("   2. –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä—É–π—Ç–µ API: /api/addresses/")
        print("   3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å")
    else:
        print("\n‚ùå –û—à–∏–±–∫–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∞–¥—Ä–µ—Å–æ–≤")

if __name__ == '__main__':
    main()