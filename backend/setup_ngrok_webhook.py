#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ webhook —Å ngrok
"""

import os
import sys
import requests
import time
from dotenv import load_dotenv

def setup_ngrok_webhook():
    """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ webhook —Å ngrok"""
    print("üåê –ù–ê–°–¢–†–û–ô–ö–ê WEBHOOK –° NGROK")
    print("=" * 50)
    
    load_dotenv()
    
    # –ü–æ–ª—É—á–∞–µ–º ngrok URL
    try:
        response = requests.get("http://localhost:4040/api/tunnels")
        if response.status_code == 200:
            tunnels = response.json()['tunnels']
            if tunnels:
                ngrok_url = tunnels[0]['public_url']
                print(f"‚úÖ –ù–∞–π–¥–µ–Ω ngrok URL: {ngrok_url}")
            else:
                print("‚ùå Ngrok —Ç—É–Ω–Ω–µ–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
                return False
        else:
            print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ ngrok —Ç—É–Ω–Ω–µ–ª—è—Ö")
            return False
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ ngrok: {e}")
        print("üí° –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ ngrok –∑–∞–ø—É—â–µ–Ω: ngrok http 8000")
        return False
    
    # –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω –±–æ—Ç–∞
    bot_token = os.getenv('BOT_TOKEN')
    if not bot_token:
        print("‚ùå BOT_TOKEN –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è")
        print("üí° –î–æ–±–∞–≤—å—Ç–µ –≤ .env —Ñ–∞–π–ª:")
        print("   BOT_TOKEN=your_bot_token_here")
        return False
    
    # –§–æ—Ä–º–∏—Ä—É–µ–º webhook URL
    webhook_url = f"{ngrok_url}/api/webhook/"
    print(f"üîó Webhook URL: {webhook_url}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–æ—Ç—É
    try:
        response = requests.get(f"https://api.telegram.org/bot{bot_token}/getMe")
        if response.status_code == 200:
            bot_info = response.json()
            print(f"‚úÖ –ë–æ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω: @{bot_info['result']['username']}")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–æ—Ç—É: {response.status_code}")
            return False
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Telegram API: {e}")
        return False
    
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º webhook
    try:
        webhook_data = {
            'url': webhook_url,
            'allowed_updates': ['message'],
            'drop_pending_updates': True
        }
        
        print("üîÑ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º webhook...")
        response = requests.post(
            f"https://api.telegram.org/bot{bot_token}/setWebhook",
            json=webhook_data
        )
        
        if response.status_code == 200:
            result = response.json()
            if result.get('ok'):
                print("‚úÖ Webhook —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω —É—Å–ø–µ—à–Ω–æ!")
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º webhook info
                info_response = requests.get(f"https://api.telegram.org/bot{bot_token}/getWebhookInfo")
                if info_response.status_code == 200:
                    info = info_response.json()
                    if info.get('ok'):
                        webhook_info = info['result']
                        print(f"üìä Webhook –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:")
                        print(f"   URL: {webhook_info.get('url', '–ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω')}")
                        print(f"   –û—à–∏–±–∫–∏: {webhook_info.get('last_error_message', '–ù–µ—Ç')}")
                        print(f"   –û–±–Ω–æ–≤–ª–µ–Ω–∏—è: {webhook_info.get('pending_update_count', 0)}")
                
                # –û–±–Ω–æ–≤–ª—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –æ–∫—Ä—É–∂–µ–Ω–∏—è
                os.environ['WEBHOOK_URL'] = webhook_url
                print(f"üíæ WEBHOOK_URL –æ–±–Ω–æ–≤–ª–µ–Ω: {webhook_url}")
                
                return True
            else:
                print(f"‚ùå –û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ webhook: {result.get('description')}")
                return False
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ webhook: {response.status_code}")
            return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ webhook: {e}")
        return False

def test_webhook():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ webhook"""
    print("\nüß™ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï WEBHOOK")
    print("=" * 50)
    
    bot_token = os.environ.get('BOT_TOKEN')
    if not bot_token:
        print("‚ùå BOT_TOKEN –Ω–µ –Ω–∞–π–¥–µ–Ω")
        return False
    
    try:
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        test_data = {
            'update_id': 123456789,
            'message': {
                'message_id': 1,
                'from': {
                    'id': 123456789,
                    'is_bot': False,
                    'first_name': 'Test',
                    'username': 'test_user'
                },
                'chat': {
                    'id': 123456789,
                    'first_name': 'Test',
                    'type': 'private'
                },
                'date': int(time.time()),
                'text': '/start'
            }
        }
        
        # –ü–æ–ª—É—á–∞–µ–º ngrok URL
        response = requests.get("http://localhost:4040/api/tunnels")
        if response.status_code == 200:
            tunnels = response.json()['tunnels']
            if tunnels:
                ngrok_url = tunnels[0]['public_url']
                webhook_url = f"{ngrok_url}/api/webhook/"
                
                print(f"üì§ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π webhook –Ω–∞ {webhook_url}")
                
                # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π webhook
                webhook_response = requests.post(
                    webhook_url,
                    json=test_data,
                    headers={'Content-Type': 'application/json'}
                )
                
                if webhook_response.status_code == 200:
                    print("‚úÖ Webhook —Ç–µ—Å—Ç –ø—Ä–æ—à–µ–ª —É—Å–ø–µ—à–Ω–æ!")
                    return True
                else:
                    print(f"‚ùå Webhook —Ç–µ—Å—Ç –Ω–µ –ø—Ä–æ—à–µ–ª: {webhook_response.status_code}")
                    print(f"–û—Ç–≤–µ—Ç: {webhook_response.text}")
                    return False
            else:
                print("‚ùå Ngrok —Ç—É–Ω–Ω–µ–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
                return False
        else:
            print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ ngrok —Ç—É–Ω–Ω–µ–ª—è—Ö")
            return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è webhook: {e}")
        return False

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üöÄ –ù–ê–°–¢–†–û–ô–ö–ê NGROK WEBHOOK")
    print("=" * 50)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ ngrok –∑–∞–ø—É—â–µ–Ω
    try:
        response = requests.get("http://localhost:4040/api/tunnels", timeout=5)
        if response.status_code != 200:
            print("‚ùå Ngrok –Ω–µ –∑–∞–ø—É—â–µ–Ω –∏–ª–∏ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω")
            print("üí° –ó–∞–ø—É—Å—Ç–∏—Ç–µ ngrok: ngrok http 8000")
            return False
    except Exception:
        print("‚ùå Ngrok –Ω–µ –∑–∞–ø—É—â–µ–Ω –∏–ª–∏ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω")
        print("üí° –ó–∞–ø—É—Å—Ç–∏—Ç–µ ngrok: ngrok http 8000")
        return False
    
    # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ webhook
    if not setup_ngrok_webhook():
        print("\n‚ùå –ù–∞—Å—Ç—Ä–æ–π–∫–∞ webhook –Ω–µ —É–¥–∞–ª–∞—Å—å")
        return False
    
    # –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ webhook
    if not test_webhook():
        print("\n‚ùå –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ webhook –Ω–µ —É–¥–∞–ª–æ—Å—å")
        return False
    
    print("\nüéâ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!")
    print("üìã –ß–µ–∫-–ª–∏—Å—Ç:")
    print("   ‚úÖ Ngrok –∑–∞–ø—É—â–µ–Ω –∏ –¥–æ—Å—Ç—É–ø–µ–Ω")
    print("   ‚úÖ Webhook —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
    print("   ‚úÖ –¢–µ—Å—Ç webhook –ø—Ä–æ—à–µ–ª")
    print("   ‚úÖ –ë–æ—Ç –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ")
    print("\nü§ñ –¢–µ–ø–µ—Ä—å –º–æ–∂–µ—Ç–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –±–æ—Ç–∞ –≤ Telegram!")

if __name__ == '__main__':
    main() 