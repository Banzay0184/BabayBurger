#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø–æ–ª–Ω–æ–π –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–∏—Å—Ç–µ–º—ã —Å —Ä–µ–∞–ª—å–Ω—ã–º –±–æ—Ç–æ–º
"""

import os
import sys
import subprocess
import time
from pathlib import Path
from dotenv import load_dotenv

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv()

def check_prerequisites():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω—ã–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è"""
    print("üîç –ü–†–û–í–ï–†–ö–ê –¢–†–ï–ë–û–í–ê–ù–ò–ô")
    print("=" * 50)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º .env —Ñ–∞–π–ª
    env_file = Path('.env')
    if not env_file.exists():
        print("‚ùå –§–∞–π–ª .env –Ω–µ –Ω–∞–π–¥–µ–Ω")
        print("üí° –°–æ–∑–¥–∞–π—Ç–µ .env —Ñ–∞–π–ª –Ω–∞ –æ—Å–Ω–æ–≤–µ env_example.txt")
        return False
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º BOT_TOKEN
    bot_token = os.getenv('BOT_TOKEN')
    if not bot_token or bot_token == 'your_bot_token_here':
        print("‚ùå BOT_TOKEN –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω")
        print("üí° –î–æ–±–∞–≤—å—Ç–µ —Ä–µ–∞–ª—å–Ω—ã–π —Ç–æ–∫–µ–Ω –±–æ—Ç–∞ –≤ .env —Ñ–∞–π–ª")
        return False
    
    print("‚úÖ –ü—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω—ã–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω—ã")
    return True

def setup_database():
    """–ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö"""
    print("\nüóÑÔ∏è  –ù–ê–°–¢–†–û–ô–ö–ê –ë–ê–ó–´ –î–ê–ù–ù–´–•")
    print("=" * 50)
    
    try:
        # –û—á–∏—â–∞–µ–º –∏ —Å–æ–∑–¥–∞–µ–º –¥–∞–Ω–Ω—ã–µ
        result = subprocess.run([
            sys.executable, 'clear_database.py'
        ], capture_output=True, text=True)
        
        if result.returncode == 0:
            print("‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞")
            return True
        else:
            print("‚ùå –û—à–∏–±–∫–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö")
            print(result.stderr)
            return False
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö: {e}")
        return False

def check_services():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –∑–∞–ø—É—â–µ–Ω–Ω—ã–µ —Å–µ—Ä–≤–∏—Å—ã"""
    print("\nüîç –ü–†–û–í–ï–†–ö–ê –°–ï–†–í–ò–°–û–í")
    print("=" * 50)
    
    services_status = {}
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º Django
    try:
        import requests
        response = requests.get("http://localhost:8000/admin/", timeout=5)
        if response.status_code in [200, 302, 403]:
            print("‚úÖ Django —Å–µ—Ä–≤–µ—Ä: –†–∞–±–æ—Ç–∞–µ—Ç")
            services_status['django'] = True
        else:
            print("‚ùå Django —Å–µ—Ä–≤–µ—Ä: –ù–µ –æ—Ç–≤–µ—á–∞–µ—Ç")
            services_status['django'] = False
    except:
        print("‚ùå Django —Å–µ—Ä–≤–µ—Ä: –ù–µ–¥–æ—Å—Ç—É–ø–µ–Ω")
        services_status['django'] = False
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º ngrok
    try:
        response = requests.get("http://localhost:4040/api/tunnels", timeout=5)
        if response.status_code == 200:
            tunnels = response.json()['tunnels']
            if tunnels:
                ngrok_url = tunnels[0]['public_url']
                print(f"‚úÖ Ngrok: {ngrok_url}")
                services_status['ngrok'] = True
            else:
                print("‚ùå Ngrok: –¢—É–Ω–Ω–µ–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
                services_status['ngrok'] = False
        else:
            print("‚ùå Ngrok: –ù–µ–¥–æ—Å—Ç—É–ø–µ–Ω")
            services_status['ngrok'] = False
    except:
        print("‚ùå Ngrok: –ù–µ–¥–æ—Å—Ç—É–ø–µ–Ω")
        services_status['ngrok'] = False
    
    return services_status

def setup_webhook():
    """–ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç webhook"""
    print("\nüîß –ù–ê–°–¢–†–û–ô–ö–ê WEBHOOK")
    print("=" * 50)
    
    try:
        result = subprocess.run([
            sys.executable, 'setup_ngrok_webhook.py'
        ], capture_output=True, text=True)
        
        if result.returncode == 0:
            print("‚úÖ Webhook –Ω–∞—Å—Ç—Ä–æ–µ–Ω")
            return True
        else:
            print("‚ùå –û—à–∏–±–∫–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ webhook")
            print(result.stderr)
            return False
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ webhook: {e}")
        return False

def test_bot():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –±–æ—Ç–∞"""
    print("\nüß™ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ë–û–¢–ê")
    print("=" * 50)
    
    try:
        result = subprocess.run([
            sys.executable, 'test_real_bot.py'
        ], capture_output=True, text=True)
        
        if result.returncode == 0:
            print("‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –±–æ—Ç–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–æ")
            return True
        else:
            print("‚ö†Ô∏è  –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –±–æ—Ç–∞ –Ω–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ")
            print(result.stderr)
            return False
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –±–æ—Ç–∞: {e}")
        return False

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üöÄ –ü–û–õ–ù–ê–Ø –ù–ê–°–¢–†–û–ô–ö–ê –°–ò–°–¢–ï–ú–´")
    print("=" * 50)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è
    if not check_prerequisites():
        print("\n‚ùå –¢—Ä–µ–±–æ–≤–∞–Ω–∏—è –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω—ã")
        return False
    
    # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
    if not setup_database():
        print("\n‚ùå –û—à–∏–±–∫–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö")
        return False
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–µ—Ä–≤–∏—Å—ã
    services_status = check_services()
    
    if not services_status.get('django'):
        print("\n‚ö†Ô∏è  Django —Å–µ—Ä–≤–µ—Ä –Ω–µ –∑–∞–ø—É—â–µ–Ω")
        print("üí° –ó–∞–ø—É—Å—Ç–∏—Ç–µ –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º —Ç–µ—Ä–º–∏–Ω–∞–ª–µ:")
        print("   python manage.py runserver")
    
    if not services_status.get('ngrok'):
        print("\n‚ö†Ô∏è  Ngrok –Ω–µ –∑–∞–ø—É—â–µ–Ω")
        print("üí° –ó–∞–ø—É—Å—Ç–∏—Ç–µ –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º —Ç–µ—Ä–º–∏–Ω–∞–ª–µ:")
        print("   ngrok http 8000")
    
    # –ï—Å–ª–∏ —Å–µ—Ä–≤–∏—Å—ã –∑–∞–ø—É—â–µ–Ω—ã, –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º webhook
    if services_status.get('django') and services_status.get('ngrok'):
        if not setup_webhook():
            print("\n‚ö†Ô∏è  Webhook –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω")
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –±–æ—Ç–∞
    test_bot()
    
    print("\nüéâ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")
    print("üìã –°—Ç–∞—Ç—É—Å —Å–∏—Å—Ç–µ–º—ã:")
    print(f"   Django: {'‚úÖ' if services_status.get('django') else '‚ùå'}")
    print(f"   Ngrok: {'‚úÖ' if services_status.get('ngrok') else '‚ùå'}")
    print("   –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö: ‚úÖ")
    print("   –†–µ–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ: ‚úÖ")
    
    print("\nüöÄ –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:")
    if not services_status.get('django'):
        print("   1. –ó–∞–ø—É—Å—Ç–∏—Ç–µ Django: python manage.py runserver")
    if not services_status.get('ngrok'):
        print("   2. –ó–∞–ø—É—Å—Ç–∏—Ç–µ ngrok: ngrok http 8000")
    print("   3. –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä—É–π—Ç–µ –±–æ—Ç–∞ –≤ Telegram")
    print("   4. –û—Ç–ø—Ä–∞–≤—å—Ç–µ –∫–æ–º–∞–Ω–¥—É /start")
    
    return True

if __name__ == '__main__':
    main() 