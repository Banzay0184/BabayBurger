#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∑–∞–ø—É—Å–∫–∞ —Å–∏—Å—Ç–µ–º—ã —Å ngrok
"""

import os
import sys
import subprocess
import time
import requests
from pathlib import Path
from dotenv import load_dotenv
load_dotenv()

def check_ngrok():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –∑–∞–ø—É—â–µ–Ω –ª–∏ ngrok"""
    try:
        response = requests.get("http://localhost:4040/api/tunnels", timeout=5)
        return response.status_code == 200
    except:
        return False

def check_django():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –∑–∞–ø—É—â–µ–Ω –ª–∏ Django"""
    try:
        response = requests.get("http://localhost:8000/admin/", timeout=5)
        return response.status_code in [200, 302, 403]  # 403 - CSRF, –Ω–æ —Å–µ—Ä–≤–µ—Ä —Ä–∞–±–æ—Ç–∞–µ—Ç
    except:
        return False

def start_services():
    """–ó–∞–ø—É—Å–∫–∞–µ—Ç –≤—Å–µ —Å–µ—Ä–≤–∏—Å—ã"""
    print("üöÄ –ó–ê–ü–£–°–ö –°–ò–°–¢–ï–ú–´ –° NGROK")
    print("=" * 50)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ .env —Ñ–∞–π–ª–∞
    env_file = Path('.env')
    if not env_file.exists():
        print("‚ùå –§–∞–π–ª .env –Ω–µ –Ω–∞–π–¥–µ–Ω")
        print("üí° –°–æ–∑–¥–∞–π—Ç–µ .env —Ñ–∞–π–ª –Ω–∞ –æ—Å–Ω–æ–≤–µ env_example.txt")
        return False
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
   
    
    bot_token = os.getenv('BOT_TOKEN')
    if not bot_token:
        print("‚ùå BOT_TOKEN –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ .env —Ñ–∞–π–ª–µ")
        print("üí° –î–æ–±–∞–≤—å—Ç–µ BOT_TOKEN=your_bot_token –≤ .env")
        return False
    
    print("‚úÖ –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –∑–∞–≥—Ä—É–∂–µ–Ω—ã")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º ngrok
    if not check_ngrok():
        print("‚ùå Ngrok –Ω–µ –∑–∞–ø—É—â–µ–Ω")
        print("üí° –ó–∞–ø—É—Å—Ç–∏—Ç–µ ngrok –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º —Ç–µ—Ä–º–∏–Ω–∞–ª–µ:")
        print("   ngrok http 8000")
        return False
    
    print("‚úÖ Ngrok –∑–∞–ø—É—â–µ–Ω")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º Django
    if not check_django():
        print("‚ùå Django —Å–µ—Ä–≤–µ—Ä –Ω–µ –∑–∞–ø—É—â–µ–Ω")
        print("üí° –ó–∞–ø—É—Å—Ç–∏—Ç–µ Django –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º —Ç–µ—Ä–º–∏–Ω–∞–ª–µ:")
        print("   python manage.py runserver")
        return False
    
    print("‚úÖ Django —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω")
    
    # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º webhook
    print("\nüîß –ù–∞—Å—Ç—Ä–æ–π–∫–∞ webhook...")
    try:
        result = subprocess.run([sys.executable, 'setup_ngrok_webhook.py'], 
                              capture_output=True, text=True)
        if result.returncode == 0:
            print("‚úÖ Webhook –Ω–∞—Å—Ç—Ä–æ–µ–Ω")
        else:
            print("‚ùå –û—à–∏–±–∫–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ webhook")
            print(result.stderr)
            return False
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ setup_ngrok_webhook.py: {e}")
        return False
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º Celery
    print("\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ Celery...")
    try:
        result = subprocess.run(['celery', '-A', 'config', 'inspect', 'ping'], 
                              capture_output=True, text=True, timeout=10)
        if result.returncode == 0:
            print("‚úÖ Celery worker –∑–∞–ø—É—â–µ–Ω")
        else:
            print("‚ö†Ô∏è  Celery worker –Ω–µ –∑–∞–ø—É—â–µ–Ω")
            print("üí° –ó–∞–ø—É—Å—Ç–∏—Ç–µ Celery –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º —Ç–µ—Ä–º–∏–Ω–∞–ª–µ:")
            print("   celery -A config worker -l info")
    except Exception as e:
        print(f"‚ö†Ô∏è  –ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ–≤–µ—Ä–∏—Ç—å Celery: {e}")
    
    # –ü–æ–ª—É—á–∞–µ–º ngrok URL
    try:
        response = requests.get("http://localhost:4040/api/tunnels")
        if response.status_code == 200:
            tunnels = response.json()['tunnels']
            if tunnels:
                ngrok_url = tunnels[0]['public_url']
                print(f"\nüåê Ngrok URL: {ngrok_url}")
                print(f"üîó Webhook: {ngrok_url}/api/webhook/")
                print(f"üìä –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥: http://localhost:4040")
            else:
                print("‚ùå Ngrok —Ç—É–Ω–Ω–µ–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
                return False
        else:
            print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ ngrok —Ç—É–Ω–Ω–µ–ª—è—Ö")
            return False
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è ngrok URL: {e}")
        return False
    
    print("\nüéâ –°–∏—Å—Ç–µ–º–∞ –≥–æ—Ç–æ–≤–∞ –∫ —Ä–∞–±–æ—Ç–µ!")
    print("üìã –î–æ—Å—Ç—É–ø–Ω—ã–µ URL:")
    print(f"   üåê –ü—É–±–ª–∏—á–Ω—ã–π URL: {ngrok_url}")
    print(f"   üîó Webhook: {ngrok_url}/api/webhook/")
    print(f"   üìä Ngrok –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥: http://localhost:4040")
    print(f"   üè† –õ–æ–∫–∞–ª—å–Ω—ã–π —Å–µ—Ä–≤–µ—Ä: http://localhost:8000")
    print(f"   üîß –ê–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å: http://localhost:8000/admin/")
    
    print("\nü§ñ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –±–æ—Ç–∞:")
    print("   1. –û—Ç–∫—Ä–æ–π—Ç–µ –±–æ—Ç–∞ –≤ Telegram")
    print("   2. –û—Ç–ø—Ä–∞–≤—å—Ç–µ –∫–æ–º–∞–Ω–¥—É /start")
    print("   3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –æ—Ç–≤–µ—Ç –±–æ—Ç–∞")
    
    print("\nüìù –õ–æ–≥–∏:")
    print("   üìÑ API –ª–æ–≥–∏: logs/api.log")
    print("   üìÑ Django –ª–æ–≥–∏: logs/django.log")
    print("   üìÑ Celery –ª–æ–≥–∏: logs/celery.log")
    
    return True

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    if not start_services():
        print("\n‚ùå –ó–∞–ø—É—Å–∫ —Å–∏—Å—Ç–µ–º—ã –Ω–µ —É–¥–∞–ª—Å—è")
        sys.exit(1)
    
    print("\n‚úÖ –°–∏—Å—Ç–µ–º–∞ —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω–∞!")
    print("üîÑ –î–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –Ω–∞–∂–º–∏—Ç–µ Ctrl+C")

if __name__ == '__main__':
    main() 