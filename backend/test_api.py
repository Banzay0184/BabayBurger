#!/usr/bin/env python
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è API endpoints
"""
import requests
import json
from datetime import datetime

# –ë–∞–∑–æ–≤—ã–π URL
BASE_URL = "http://localhost:8000/api"

def test_endpoint(endpoint, method="GET", data=None, description=""):
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç API endpoint"""
    url = f"{BASE_URL}{endpoint}"
    
    print(f"\n{'='*60}")
    print(f"–¢–µ—Å—Ç–∏—Ä—É–µ–º: {method} {endpoint}")
    if description:
        print(f"–û–ø–∏—Å–∞–Ω–∏–µ: {description}")
    print(f"URL: {url}")
    
    try:
        if method == "GET":
            response = requests.get(url)
        elif method == "POST":
            response = requests.post(url, json=data)
        elif method == "PUT":
            response = requests.put(url, json=data)
        elif method == "DELETE":
            response = requests.delete(url, json=data)
        elif method == "PATCH":
            response = requests.patch(url, json=data)
        
        print(f"–°—Ç–∞—Ç—É—Å: {response.status_code}")
        
        if response.status_code == 200:
            print("‚úÖ –£—Å–ø–µ—à–Ω–æ!")
            try:
                result = response.json()
                print(f"–î–∞–Ω–Ω—ã–µ: {json.dumps(result, indent=2, ensure_ascii=False)}")
            except:
                print(f"–û—Ç–≤–µ—Ç: {response.text}")
        else:
            print("‚ùå –û—à–∏–±–∫–∞!")
            try:
                error = response.json()
                print(f"–û—à–∏–±–∫–∞: {json.dumps(error, indent=2, ensure_ascii=False)}")
            except:
                print(f"–û—à–∏–±–∫–∞: {response.text}")
                
    except requests.exceptions.ConnectionError:
        print("‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è! –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É 8000")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {str(e)}")

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API Babay Burger")
    print(f"–í—Ä–µ–º—è: {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}")
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ endpoints
    
    # 1. –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
    test_endpoint("/statistics/", "GET", description="–ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏")
    
    # 2. –ö–∞—Ç–µ–≥–æ—Ä–∏–∏
    test_endpoint("/categories/", "GET", description="–ü–æ–ª—É—á–µ–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–π")
    
    # 3. –ú–µ–Ω—é
    test_endpoint("/menu/", "GET", description="–ü–æ–ª—É—á–µ–Ω–∏–µ –º–µ–Ω—é")
    
    # 4. –•–∏—Ç—ã
    test_endpoint("/menu/hits/", "GET", description="–ü–æ–ª—É—á–µ–Ω–∏–µ —Ö–∏—Ç–æ–≤")
    
    # 5. –ù–æ–≤–∏–Ω–∫–∏
    test_endpoint("/menu/new/", "GET", description="–ü–æ–ª—É—á–µ–Ω–∏–µ –Ω–æ–≤–∏–Ω–æ–∫")
    
    # 6. –ò–∑–±—Ä–∞–Ω–Ω—ã–µ
    test_endpoint("/menu/featured/", "GET", description="–ü–æ–ª—É—á–µ–Ω–∏–µ –∏–∑–±—Ä–∞–Ω–Ω—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤")
    
    # 7. –ü–æ–∏—Å–∫
    test_endpoint("/menu/search/?q=–±—É—Ä–≥–µ—Ä", "GET", description="–ü–æ–∏—Å–∫ —Ç–æ–≤–∞—Ä–æ–≤")
    
    # 8. –§–∏–ª—å—Ç—Ä –ø–æ —Ü–µ–Ω–µ
    test_endpoint("/menu/price-range/?min_price=10000&max_price=30000", "GET", description="–§–∏–ª—å—Ç—Ä –ø–æ —Ü–µ–Ω–µ")
    
    # 9. –ê–∫—Ü–∏–∏
    test_endpoint("/promotions/", "GET", description="–ü–æ–ª—É—á–µ–Ω–∏–µ –∞–∫—Ü–∏–π")
    
    # 10. –ó–æ–Ω—ã –¥–æ—Å—Ç–∞–≤–∫–∏
    test_endpoint("/delivery-zones/", "GET", description="–ü–æ–ª—É—á–µ–Ω–∏–µ –∑–æ–Ω –¥–æ—Å—Ç–∞–≤–∫–∏")
    
    # 11. –î–µ—Ç–∞–ª–∏ —Ç–æ–≤–∞—Ä–∞
    test_endpoint("/menu/items/1/", "GET", description="–ü–æ–ª—É—á–µ–Ω–∏–µ –¥–µ—Ç–∞–ª–µ–π —Ç–æ–≤–∞—Ä–∞")
    
    # 12. –¢–æ–≤–∞—Ä—ã –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
    test_endpoint("/categories/1/items/", "GET", description="–ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–æ–≤ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏")
    
    # 13. –ö–æ—Ä–∑–∏–Ω–∞ (–ø–æ–ª—É—á–∏—Ç—å)
    test_endpoint("/cart/", "GET", description="–ü–æ–ª—É—á–µ–Ω–∏–µ –∫–æ—Ä–∑–∏–Ω—ã")
    
    # 14. –ö–æ—Ä–∑–∏–Ω–∞ (–¥–æ–±–∞–≤–∏—Ç—å —Ç–æ–≤–∞—Ä)
    test_endpoint("/cart/", "POST", {
        "item_id": 1,
        "quantity": 2
    }, description="–î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞ –≤ –∫–æ—Ä–∑–∏–Ω—É")
    
    # 15. –ö–æ—Ä–∑–∏–Ω–∞ (–æ–±–Ω–æ–≤–∏—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ)
    test_endpoint("/cart/", "PUT", {
        "item_id": 1,
        "quantity": 3
    }, description="–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –≤ –∫–æ—Ä–∑–∏–Ω–µ")
    
    # 16. –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–æ–Ω—ã –¥–æ—Å—Ç–∞–≤–∫–∏
    test_endpoint("/addresses/delivery-zone-check/", "POST", {
        "address": {
            "street": "–£–ª–∏—Ü–∞ –ü—É—à–∫–∏–Ω–∞",
            "house_number": "10",
            "city": "–ë—É—Ö–∞—Ä–∞",
            "latitude": 39.7681,
            "longitude": 64.4556
        }
    }, description="–ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–¥—Ä–µ—Å–∞ –≤ –∑–æ–Ω–µ –¥–æ—Å—Ç–∞–≤–∫–∏")
    
    # 17. –ì–µ–æ–∫–æ–¥–∏—Ä–æ–≤–∞–Ω–∏–µ
    test_endpoint("/geocode/?query=–ë—É—Ö–∞—Ä–∞, —É–ª–∏—Ü–∞ –ü—É—à–∫–∏–Ω–∞ 10", "GET", description="–ì–µ–æ–∫–æ–¥–∏—Ä–æ–≤–∞–Ω–∏–µ –∞–¥—Ä–µ—Å–∞")
    
    # 18. ViewSets
    test_endpoint("/menu-items/", "GET", description="MenuItem ViewSet")
    test_endpoint("/add-ons/", "GET", description="AddOn ViewSet")
    test_endpoint("/size-options/", "GET", description="SizeOption ViewSet")
    test_endpoint("/promotions/", "GET", description="Promotion ViewSet")
    
    print(f"\n{'='*60}")
    print("‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")
    print(f"–í—Ä–µ–º—è: {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}")

if __name__ == "__main__":
    main() 