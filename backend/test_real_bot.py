#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Ä–µ–∞–ª—å–Ω–æ–≥–æ –±–æ—Ç–∞
"""

import os
import sys
import requests
import time
from dotenv import load_dotenv

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv()

def test_bot_connection():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–æ—Ç—É"""
    print("ü§ñ –¢–ï–°–¢ –ü–û–î–ö–õ–Æ–ß–ï–ù–ò–Ø –ö –ë–û–¢–£")
    print("=" * 50)
    
    bot_token = os.getenv('BOT_TOKEN')
    if not bot_token or bot_token == 'your_bot_token_here':
        print("‚ùå BOT_TOKEN –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω")
        return False
    
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–æ—Ç—É
        response = requests.get(f"https://api.telegram.org/bot{bot_token}/getMe")
        if response.status_code == 200:
            bot_info = response.json()
            print(f"‚úÖ –ë–æ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω: @{bot_info['result']['username']}")
            print(f"   ID: {bot_info['result']['id']}")
            print(f"   –ò–º—è: {bot_info['result']['first_name']}")
            return True
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: {response.status_code}")
            return False
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: {e}")
        return False

def test_webhook_status():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Å—Ç–∞—Ç—É—Å webhook"""
    print("\nüîó –ü–†–û–í–ï–†–ö–ê WEBHOOK")
    print("=" * 50)
    
    bot_token = os.getenv('BOT_TOKEN')
    if not bot_token:
        print("‚ùå BOT_TOKEN –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω")
        return False
    
    try:
        # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ webhook
        response = requests.get(f"https://api.telegram.org/bot{bot_token}/getWebhookInfo")
        if response.status_code == 200:
            webhook_info = response.json()
            if webhook_info.get('ok'):
                info = webhook_info['result']
                print(f"‚úÖ Webhook URL: {info.get('url', '–ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω')}")
                print(f"   –û—à–∏–±–∫–∏: {info.get('last_error_message', '–ù–µ—Ç')}")
                print(f"   –û–±–Ω–æ–≤–ª–µ–Ω–∏—è: {info.get('pending_update_count', 0)}")
                
                if info.get('url'):
                    return True
                else:
                    print("‚ö†Ô∏è  Webhook –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
                    return False
            else:
                print("‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è webhook info")
                return False
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞: {response.status_code}")
            return False
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ webhook: {e}")
        return False

def test_django_server():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç Django —Å–µ—Ä–≤–µ—Ä"""
    print("\nüåê –ü–†–û–í–ï–†–ö–ê DJANGO –°–ï–†–í–ï–†–ê")
    print("=" * 50)
    
    endpoints = [
        ("http://localhost:8000/admin/", "Admin –ø–∞–Ω–µ–ª—å"),
        ("http://localhost:8000/api/menu/", "API –º–µ–Ω—é"),
        ("http://localhost:8000/api/auth/", "API –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è"),
    ]
    
    all_ok = True
    for url, name in endpoints:
        try:
            response = requests.get(url, timeout=5)
            if response.status_code in [200, 302, 403]:
                print(f"‚úÖ {name}: {response.status_code}")
            else:
                print(f"‚ùå {name}: {response.status_code}")
                all_ok = False
        except requests.exceptions.RequestException as e:
            print(f"‚ùå {name}: {e}")
            all_ok = False
    
    return all_ok

def test_ngrok():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç ngrok"""
    print("\nüåç –ü–†–û–í–ï–†–ö–ê NGROK")
    print("=" * 50)
    
    try:
        response = requests.get("http://localhost:4040/api/tunnels", timeout=5)
        if response.status_code == 200:
            tunnels = response.json()['tunnels']
            if tunnels:
                ngrok_url = tunnels[0]['public_url']
                print(f"‚úÖ Ngrok URL: {ngrok_url}")
                print(f"   Webhook: {ngrok_url}/api/webhook/")
                return True
            else:
                print("‚ùå Ngrok —Ç—É–Ω–Ω–µ–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
                return False
        else:
            print("‚ùå Ngrok –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω")
            return False
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ ngrok: {e}")
        return False

def send_test_message():
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Ç–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ"""
    print("\nüì§ –û–¢–ü–†–ê–í–ö–ê –¢–ï–°–¢–û–í–û–ì–û –°–û–û–ë–©–ï–ù–ò–Ø")
    print("=" * 50)
    
    bot_token = os.getenv('BOT_TOKEN')
    chat_id = input("–í–≤–µ–¥–∏—Ç–µ –≤–∞—à Telegram ID (–∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –ø—Ä–æ–ø—É—Å–∫–∞): ").strip()
    
    if not chat_id:
        print("‚è≠Ô∏è  –¢–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø—Ä–æ–ø—É—â–µ–Ω–æ")
        return True
    
    try:
        message_data = {
            'chat_id': chat_id,
            'text': 'üß™ –¢–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç StreetBurger Bot!\n\n‚úÖ –°–∏—Å—Ç–µ–º–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!'
        }
        
        response = requests.post(
            f"https://api.telegram.org/bot{bot_token}/sendMessage",
            json=message_data
        )
        
        if response.status_code == 200:
            print("‚úÖ –¢–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ!")
            return True
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏: {response.status_code}")
            print(f"–û—Ç–≤–µ—Ç: {response.text}")
            return False
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏: {e}")
        return False

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üß™ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –†–ï–ê–õ–¨–ù–û–ì–û –ë–û–¢–ê")
    print("=" * 50)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–æ—Ç—É
    if not test_bot_connection():
        print("\n‚ùå –ü—Ä–æ–±–ª–µ–º—ã —Å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ–º –∫ –±–æ—Ç—É")
        return False
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º webhook
    if not test_webhook_status():
        print("\n‚ö†Ô∏è  Webhook –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω")
        print("üí° –ó–∞–ø—É—Å—Ç–∏—Ç–µ: python setup_ngrok_webhook.py")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º Django —Å–µ—Ä–≤–µ—Ä
    if not test_django_server():
        print("\n‚ùå Django —Å–µ—Ä–≤–µ—Ä –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç")
        print("üí° –ó–∞–ø—É—Å—Ç–∏—Ç–µ: python manage.py runserver")
        return False
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º ngrok
    if not test_ngrok():
        print("\n‚ùå Ngrok –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç")
        print("üí° –ó–∞–ø—É—Å—Ç–∏—Ç–µ: ngrok http 8000")
        return False
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    send_test_message()
    
    print("\nüéâ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")
    print("üìã –†–µ–∑—É–ª—å—Ç–∞—Ç—ã:")
    print("   ‚úÖ –ë–æ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω")
    print("   ‚úÖ Django —Å–µ—Ä–≤–µ—Ä —Ä–∞–±–æ—Ç–∞–µ—Ç")
    print("   ‚úÖ Ngrok –Ω–∞—Å—Ç—Ä–æ–µ–Ω")
    print("\nü§ñ –¢–µ–ø–µ—Ä—å –º–æ–∂–µ—Ç–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –±–æ—Ç–∞ –≤ Telegram!")
    print("   –ö–æ–º–∞–Ω–¥—ã: /start, /menu, /orders, /status, /help")
    
    return True

if __name__ == '__main__':
    main() 