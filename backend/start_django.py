#!/usr/bin/env python3
"""
–ü—Ä–æ—Å—Ç–æ–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –∑–∞–ø—É—Å–∫–∞ Django —Å–µ—Ä–≤–µ—Ä–∞
"""

import os
import sys
import subprocess
import signal
import time

def start_django():
    """–ó–∞–ø—É—Å–∫–∞–µ—Ç Django —Å–µ—Ä–≤–µ—Ä —Å –ø–æ–¥—Ä–æ–±–Ω—ã–º –≤—ã–≤–æ–¥–æ–º"""
    print("üöÄ –ó–ê–ü–£–°–ö DJANGO –°–ï–†–í–ï–†–ê")
    print("=" * 50)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ manage.py
    if not os.path.exists('manage.py'):
        print("‚ùå manage.py –Ω–µ –Ω–∞–π–¥–µ–Ω")
        return False
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º .env —Ñ–∞–π–ª
    if not os.path.exists('.env'):
        print("‚ö†Ô∏è  .env —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω")
        print("üí° –°–æ–∑–¥–∞–π—Ç–µ .env —Ñ–∞–π–ª –Ω–∞ –æ—Å–Ω–æ–≤–µ env_example.txt")
    
    print("‚úÖ –§–∞–π–ª—ã –ø—Ä–æ–≤–µ—Ä–µ–Ω—ã")
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º Django —Å–µ—Ä–≤–µ—Ä
    try:
        print("üîÑ –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞...")
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º —Å –≤—ã–≤–æ–¥–æ–º –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏
        process = subprocess.Popen([
            sys.executable, 'manage.py', 'runserver', '0.0.0.0:8000'
        ], stdout=subprocess.PIPE, stderr=subprocess.STDOUT, 
        universal_newlines=True, bufsize=1)
        
        print("‚úÖ –ü—Ä–æ—Ü–µ—Å—Å –∑–∞–ø—É—â–µ–Ω")
        print("üìù –õ–æ–≥–∏ —Å–µ—Ä–≤–µ—Ä–∞:")
        print("-" * 50)
        
        # –ß–∏—Ç–∞–µ–º –≤—ã–≤–æ–¥ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏
        while True:
            output = process.stdout.readline()
            if output == '' and process.poll() is not None:
                break
            if output:
                print(output.strip())
        
        # –ñ–¥–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è
        return_code = process.poll()
        if return_code == 0:
            print("‚úÖ –°–µ—Ä–≤–µ—Ä –∑–∞–≤–µ—Ä—à–µ–Ω –Ω–æ—Ä–º–∞–ª—å–Ω–æ")
            return True
        else:
            print(f"‚ùå –°–µ—Ä–≤–µ—Ä –∑–∞–≤–µ—Ä—à–µ–Ω —Å –∫–æ–¥–æ–º {return_code}")
            return False
            
    except KeyboardInterrupt:
        print("\nüõë –ü–æ–ª—É—á–µ–Ω —Å–∏–≥–Ω–∞–ª –æ—Å—Ç–∞–Ω–æ–≤–∫–∏...")
        process.terminate()
        process.wait()
        print("‚úÖ –°–µ—Ä–≤–µ—Ä –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
        return True
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞: {e}")
        return False

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üîß –ó–ê–ü–£–°–ö DJANGO –°–ï–†–í–ï–†–ê")
    print("=" * 50)
    
    # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–∏–≥–Ω–∞–ª–æ–≤
    def signal_handler(signum, frame):
        print("\nüõë –ü–æ–ª—É—á–µ–Ω —Å–∏–≥–Ω–∞–ª –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è...")
        sys.exit(0)
    
    signal.signal(signal.SIGINT, signal_handler)
    signal.signal(signal.SIGTERM, signal_handler)
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Ä–≤–µ—Ä
    success = start_django()
    
    if success:
        print("\n‚úÖ Django —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω —É—Å–ø–µ—à–Ω–æ!")
        print("üåê –î–æ—Å—Ç—É–ø–µ–Ω –ø–æ –∞–¥—Ä–µ—Å—É: http://localhost:8000")
        print("üîß –ê–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å: http://localhost:8000/admin/")
    else:
        print("\n‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ Django —Å–µ—Ä–≤–µ—Ä–∞")
        sys.exit(1)

if __name__ == '__main__':
    main() 