#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ CORS –Ω–∞—Å—Ç—Ä–æ–µ–∫ –∏ API –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏
"""

import requests
import json
import sys
import os

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ Django –ø—Ä–æ–µ–∫—Ç—É
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ Django
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'config.settings')

import django
django.setup()

from django.test import RequestFactory
from django.http import HttpResponse
from corsheaders.middleware import CorsMiddleware
from django.middleware.common import CommonMiddleware

def test_cors_middleware():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º CORS middleware"""
    print("üîß –¢–µ—Å—Ç–∏—Ä—É–µ–º CORS middleware...")
    
    # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å
    factory = RequestFactory()
    request = factory.get('/api/auth/telegram-widget/')
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∑–∞–≥–æ–ª–æ–≤–∫–∏ –∫–∞–∫ –±—É–¥—Ç–æ –∑–∞–ø—Ä–æ—Å –ø—Ä–∏—Ö–æ–¥–∏—Ç —Å Vercel
    request.META['HTTP_ORIGIN'] = 'https://babay-burger.vercel.app'
    request.META['HTTP_HOST'] = 'ec5b3f679bd2.ngrok-free.app'
    
    # –°–æ–∑–¥–∞–µ–º middleware
    cors_middleware = CorsMiddleware()
    common_middleware = CommonMiddleware()
    
    # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∑–∞–ø—Ä–æ—Å
    response = cors_middleware.process_request(request)
    if response is None:
        response = HttpResponse("OK")
    
    # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –æ—Ç–≤–µ—Ç
    response = cors_middleware.process_response(request, response)
    
    print("‚úÖ CORS –∑–∞–≥–æ–ª–æ–≤–∫–∏ –≤ –æ—Ç–≤–µ—Ç–µ:")
    for header, value in response.items():
        if 'access-control' in header.lower():
            print(f"  {header}: {value}")
    
    return response

def test_api_endpoints():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å API endpoints"""
    print("\nüåê –¢–µ—Å—Ç–∏—Ä—É–µ–º API endpoints...")
    
    base_url = "https://ec5b3f679bd2.ngrok-free.app/api"
    endpoints = [
        "/auth/telegram-widget/",
        "/auth/test/",
        "/menu/",
    ]
    
    headers = {
        'ngrok-skip-browser-warning': 'true',
        'Content-Type': 'application/json',
    }
    
    for endpoint in endpoints:
        url = f"{base_url}{endpoint}"
        print(f"\nüì° –¢–µ—Å—Ç–∏—Ä—É–µ–º: {url}")
        
        try:
            response = requests.get(url, headers=headers, timeout=10)
            print(f"‚úÖ –°—Ç–∞—Ç—É—Å: {response.status_code}")
            print(f"üìã –ó–∞–≥–æ–ª–æ–≤–∫–∏ –æ—Ç–≤–µ—Ç–∞:")
            for header, value in response.headers.items():
                if 'access-control' in header.lower():
                    print(f"  {header}: {value}")
        except requests.exceptions.RequestException as e:
            print(f"‚ùå –û—à–∏–±–∫–∞: {e}")

def test_cors_configuration():
    """–ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é CORS –≤ settings"""
    print("\n‚öôÔ∏è –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é CORS...")
    
    from config.settings import CORS_ALLOWED_ORIGINS, CORS_ALLOW_ALL_ORIGINS
    
    print(f"CORS_ALLOW_ALL_ORIGINS: {CORS_ALLOW_ALL_ORIGINS}")
    print(f"CORS_ALLOWED_ORIGINS: {CORS_ALLOWED_ORIGINS}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ Vercel –¥–æ–º–µ–Ω –≤ —Ä–∞–∑—Ä–µ—à–µ–Ω–Ω—ã—Ö
    vercel_domains = [origin for origin in CORS_ALLOWED_ORIGINS if 'vercel.app' in origin]
    print(f"Vercel –¥–æ–º–µ–Ω—ã –≤ CORS: {vercel_domains}")

if __name__ == "__main__":
    print("üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ CORS –∏ API...")
    
    test_cors_configuration()
    test_cors_middleware()
    test_api_endpoints()
    
    print("\n‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!") 