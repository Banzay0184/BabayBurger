#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ webhook –¥–ª—è Telegram –±–æ—Ç–∞
"""

import os
import requests
from dotenv import load_dotenv

load_dotenv()

def setup_webhook():
    """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ webhook –¥–ª—è Telegram –±–æ—Ç–∞"""
    
    # –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω –±–æ—Ç–∞ –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
    bot_token = os.getenv('BOT_TOKEN')
    if not bot_token:
        print("‚ùå BOT_TOKEN –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ .env —Ñ–∞–π–ª–µ")
        return False
    
    # URL –¥–ª—è webhook (–∑–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à –¥–æ–º–µ–Ω)
    webhook_url = "https://c53683f80930.ngrok-free.app/api/webhook/"  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à –¥–æ–º–µ–Ω
    
    print(f"ü§ñ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ webhook –¥–ª—è –±–æ—Ç–∞ —Å —Ç–æ–∫–µ–Ω–æ–º: {bot_token[:10]}...")
    print(f"üåê Webhook URL: {webhook_url}")
    
    # 1. –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –±–æ—Ç–µ
    try:
        response = requests.get(f"https://api.telegram.org/bot{bot_token}/getMe")
        if response.status_code == 200:
            bot_info = response.json()['result']
            print(f"‚úÖ –ë–æ—Ç –Ω–∞–π–¥–µ–Ω: @{bot_info['username']}")
            print(f"üìù –ò–º—è –±–æ—Ç–∞: {bot_info['first_name']}")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –±–æ—Ç–µ: {response.text}")
            return False
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Telegram API: {e}")
        return False
    
    # 2. –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º webhook
    try:
        response = requests.post(
            f"https://api.telegram.org/bot{bot_token}/setWebhook",
            json={
                "url": webhook_url,
                "allowed_updates": ["message", "callback_query"],
                "drop_pending_updates": True
            }
        )
        
        if response.status_code == 200:
            result = response.json()
            if result.get('ok'):
                print("‚úÖ Webhook —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
                # –ë–µ–∑–æ–ø–∞—Å–Ω–æ –ø–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–µ
                result_data = result.get('result', {})
                if isinstance(result_data, dict):
                    print(f"üì° URL: {result_data.get('url', 'N/A')}")
                    print(f"üîó –í—Å–µ–≥–æ URL: {result_data.get('pending_update_count', 0)}")
                else:
                    print(f"üì° –†–µ–∑—É–ª—å—Ç–∞—Ç: {result_data}")
            else:
                print(f"‚ùå –û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ webhook: {result.get('description', 'Unknown error')}")
                return False
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ webhook: {response.text}")
            return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ webhook: {e}")
        return False
    
    # 3. –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ webhook
    try:
        response = requests.get(f"https://api.telegram.org/bot{bot_token}/getWebhookInfo")
        if response.status_code == 200:
            webhook_info = response.json()['result']
            print("\nüìä –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ webhook:")
            print(f"‚Ä¢ URL: {webhook_info.get('url', '–ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω')}")
            print(f"‚Ä¢ –û–∂–∏–¥–∞—é—â–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è: {webhook_info.get('pending_update_count', 0)}")
            print(f"‚Ä¢ –ü–æ—Å–ª–µ–¥–Ω—è—è –æ—à–∏–±–∫–∞: {webhook_info.get('last_error_message', '–ù–µ—Ç')}")
            print(f"‚Ä¢ –ü–æ—Å–ª–µ–¥–Ω—è—è –æ—à–∏–±–∫–∞: {webhook_info.get('last_error_date', '–ù–µ—Ç')}")
        else:
            print(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ webhook: {response.text}")
    except Exception as e:
        print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ webhook: {e}")
    
    return True

def delete_webhook():
    """–£–¥–∞–ª–µ–Ω–∏–µ webhook"""
    
    bot_token = os.getenv('BOT_TOKEN')
    if not bot_token:
        print("‚ùå BOT_TOKEN –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ .env —Ñ–∞–π–ª–µ")
        return False
    
    try:
        response = requests.post(f"https://api.telegram.org/bot{bot_token}/deleteWebhook")
        if response.status_code == 200:
            result = response.json()
            if result.get('ok'):
                print("‚úÖ Webhook —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω")
                return True
            else:
                print(f"‚ùå –û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è webhook: {result.get('description', 'Unknown error')}")
                return False
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è webhook: {response.text}")
            return False
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è webhook: {e}")
        return False

def test_webhook():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ webhook"""
    
    bot_token = os.getenv('BOT_TOKEN')
    if not bot_token:
        print("‚ùå BOT_TOKEN –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ .env —Ñ–∞–π–ª–µ")
        return False
    
    try:
        response = requests.get(f"https://api.telegram.org/bot{bot_token}/getWebhookInfo")
        if response.status_code == 200:
            webhook_info = response.json()['result']
            url = webhook_info.get('url')
            
            if url and url != "https://your-domain.com/api/webhook/":
                print(f"‚úÖ Webhook –Ω–∞—Å—Ç—Ä–æ–µ–Ω: {url}")
                print("üß™ –î–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:")
                print("1. –û—Ç–∫—Ä–æ–π—Ç–µ –±–æ—Ç–∞ –≤ Telegram")
                print("2. –û—Ç–ø—Ä–∞–≤—å—Ç–µ –∫–æ–º–∞–Ω–¥—É /start")
                print("3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ –ø–æ—è–≤–∏–ª–∞—Å—å –∫–Ω–æ–ø–∫–∞ Web App")
                return True
            else:
                print("‚ùå Webhook –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω –∏–ª–∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ")
                return False
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ webhook: {response.text}")
            return False
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è webhook: {e}")
        return False

if __name__ == "__main__":
    import sys
    
    if len(sys.argv) > 1:
        command = sys.argv[1]
        
        if command == "setup":
            print("üöÄ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ webhook –¥–ª—è Telegram –±–æ—Ç–∞")
            print("=" * 50)
            setup_webhook()
            
        elif command == "delete":
            print("üóëÔ∏è –£–¥–∞–ª–µ–Ω–∏–µ webhook")
            print("=" * 50)
            delete_webhook()
            
        elif command == "test":
            print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ webhook")
            print("=" * 50)
            test_webhook()
            
        else:
            print("‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: setup, delete, test")
    else:
        print("üöÄ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ webhook –¥–ª—è Telegram –±–æ—Ç–∞")
        print("=" * 50)
        print("–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:")
        print("  python setup_webhook.py setup  - –ù–∞—Å—Ç—Ä–æ–∏—Ç—å webhook")
        print("  python setup_webhook.py delete - –£–¥–∞–ª–∏—Ç—å webhook")
        print("  python setup_webhook.py test   - –¢–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å webhook")
        print()
        
        if setup_webhook():
            print("\nüìù –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:")
            print("1. –ó–∞–ø—É—Å—Ç–∏—Ç–µ –±—ç–∫—ç–Ω–¥: python manage.py runserver")
            print("2. –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥: npm run dev")
            print("3. –û—Ç–∫—Ä–æ–π—Ç–µ –±–æ—Ç–∞ –≤ Telegram –∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ /start")
            print("4. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ –ø–æ—è–≤–∏–ª–∞—Å—å –∫–Ω–æ–ø–∫–∞ Web App")
        else:
            print("\n‚ùå –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –Ω–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ BOT_TOKEN –≤ .env —Ñ–∞–π–ª–µ.") 