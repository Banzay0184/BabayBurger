#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Ä–µ–∞–ª—å–Ω–æ–≥–æ Telegram –±–æ—Ç–∞
"""

import os
import sys
import django
from django.conf import settings

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Django
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'config.settings')
django.setup()

def setup_bot():
    """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ Telegram –±–æ—Ç–∞"""
    print("ü§ñ –ù–ê–°–¢–†–û–ô–ö–ê TELEGRAM –ë–û–¢–ê")
    print("=" * 50)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
    bot_token = os.environ.get('BOT_TOKEN')
    webhook_url = os.environ.get('WEBHOOK_URL')
    
    if not bot_token:
        print("‚ùå BOT_TOKEN –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è")
        print("üí° –î–æ–±–∞–≤—å—Ç–µ –≤ .env —Ñ–∞–π–ª:")
        print("   BOT_TOKEN=your_bot_token_here")
        return False
    
    if not webhook_url:
        print("‚ùå WEBHOOK_URL –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è")
        print("üí° –î–æ–±–∞–≤—å—Ç–µ –≤ .env —Ñ–∞–π–ª:")
        print("   WEBHOOK_URL=https://your-domain.com/api/webhook/")
        return False
    
    print(f"‚úÖ BOT_TOKEN: {bot_token[:10]}...")
    print(f"‚úÖ WEBHOOK_URL: {webhook_url}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–æ—Ç—É
    import requests
    
    try:
        response = requests.get(f"https://api.telegram.org/bot{bot_token}/getMe")
        if response.status_code == 200:
            bot_info = response.json()
            print(f"‚úÖ –ë–æ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω: @{bot_info['result']['username']}")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–æ—Ç—É: {response.status_code}")
            return False
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Telegram API: {e}")
        return False
    
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º webhook
    try:
        webhook_data = {
            'url': webhook_url,
            'allowed_updates': ['message'],
            'drop_pending_updates': True
        }
        
        response = requests.post(
            f"https://api.telegram.org/bot{bot_token}/setWebhook",
            json=webhook_data
        )
        
        if response.status_code == 200:
            result = response.json()
            if result.get('ok'):
                print("‚úÖ Webhook —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω —É—Å–ø–µ—à–Ω–æ")
            else:
                print(f"‚ùå –û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ webhook: {result.get('description')}")
                return False
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ webhook: {response.status_code}")
            return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ webhook: {e}")
        return False
    
    print("\nüéâ –ë–æ—Ç –Ω–∞—Å—Ç—Ä–æ–µ–Ω —É—Å–ø–µ—à–Ω–æ!")
    print("üìù –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:")
    print("   1. –ó–∞–ø—É—Å—Ç–∏—Ç–µ Django —Å–µ—Ä–≤–µ—Ä: python manage.py runserver")
    print("   2. –ó–∞–ø—É—Å—Ç–∏—Ç–µ Celery: celery -A config worker -l info")
    print("   3. –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä—É–π—Ç–µ –±–æ—Ç–∞: –æ—Ç–ø—Ä–∞–≤—å—Ç–µ /start")
    
    return True

def create_sample_data():
    """–°–æ–∑–¥–∞–Ω–∏–µ –æ–±—Ä–∞–∑—Ü–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö"""
    print("\nüìä –°–û–ó–î–ê–ù–ò–ï –û–ë–†–ê–ó–¶–û–í–´–• –î–ê–ù–ù–´–•")
    print("=" * 50)
    
    from api.models import Category, MenuItem
    
    # –°–æ–∑–¥–∞–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
    categories_data = [
        {
            'name': '–ë—É—Ä–≥–µ—Ä—ã',
            'description': '–°–æ—á–Ω—ã–µ –±—É—Ä–≥–µ—Ä—ã —Å –º—è—Å–æ–º –∏ –æ–≤–æ—â–∞–º–∏'
        },
        {
            'name': '–ù–∞–ø–∏—Ç–∫–∏',
            'description': '–•–æ–ª–æ–¥–Ω—ã–µ –∏ –≥–æ—Ä—è—á–∏–µ –Ω–∞–ø–∏—Ç–∫–∏'
        },
        {
            'name': '–î–µ—Å–µ—Ä—Ç—ã',
            'description': '–°–ª–∞–¥–∫–∏–µ –¥–µ—Å–µ—Ä—Ç—ã –∏ –≤—ã–ø–µ—á–∫–∞'
        }
    ]
    
    for cat_data in categories_data:
        category, created = Category.objects.get_or_create(
            name=cat_data['name'],
            defaults=cat_data
        )
        if created:
            print(f"‚úÖ –°–æ–∑–¥–∞–Ω–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏—è: {category.name}")
    
    # –°–æ–∑–¥–∞–µ–º –±–ª—é–¥–∞
    menu_items_data = [
        {
            'name': '–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–π –±—É—Ä–≥–µ—Ä',
            'description': '–ë—É—Ä–≥–µ—Ä —Å –≥–æ–≤—è–∂—å–µ–π –∫–æ—Ç–ª–µ—Ç–æ–π, —Å–∞–ª–∞—Ç–æ–º –∏ —Å–æ—É—Å–æ–º',
            'price': 350.00,
            'category_name': '–ë—É—Ä–≥–µ—Ä—ã'
        },
        {
            'name': '–ß–∏–∑–±—É—Ä–≥–µ—Ä',
            'description': '–ë—É—Ä–≥–µ—Ä —Å —Å—ã—Ä–æ–º –∏ –≥–æ–≤—è–∂—å–µ–π –∫–æ—Ç–ª–µ—Ç–æ–π',
            'price': 400.00,
            'category_name': '–ë—É—Ä–≥–µ—Ä—ã'
        },
        {
            'name': '–ë–∏–≥ –ú–∞–∫',
            'description': '–î–≤–æ–π–Ω–æ–π –±—É—Ä–≥–µ—Ä —Å –¥–≤—É–º—è –∫–æ—Ç–ª–µ—Ç–∞–º–∏',
            'price': 450.00,
            'category_name': '–ë—É—Ä–≥–µ—Ä—ã'
        },
        {
            'name': '–ö–æ–ª–∞',
            'description': '–ì–∞–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –Ω–∞–ø–∏—Ç–æ–∫ Coca-Cola',
            'price': 150.00,
            'category_name': '–ù–∞–ø–∏—Ç–∫–∏'
        },
        {
            'name': '–ß–∞–π',
            'description': '–ì–æ—Ä—è—á–∏–π —á–∞–π —Å –ª–∏–º–æ–Ω–æ–º',
            'price': 100.00,
            'category_name': '–ù–∞–ø–∏—Ç–∫–∏'
        },
        {
            'name': '–¢–∏—Ä–∞–º–∏—Å—É',
            'description': '–ò—Ç–∞–ª—å—è–Ω—Å–∫–∏–π –¥–µ—Å–µ—Ä—Ç —Å –∫–æ—Ñ–µ',
            'price': 250.00,
            'category_name': '–î–µ—Å–µ—Ä—Ç—ã'
        }
    ]
    
    for item_data in menu_items_data:
        category = Category.objects.get(name=item_data['category_name'])
        menu_item, created = MenuItem.objects.get_or_create(
            name=item_data['name'],
            defaults={
                'description': item_data['description'],
                'price': item_data['price'],
                'category': category
            }
        )
        if created:
            print(f"‚úÖ –°–æ–∑–¥–∞–Ω–æ –±–ª—é–¥–æ: {menu_item.name} - {menu_item.price} ‚ÇΩ")
    
    print("\n‚úÖ –û–±—Ä–∞–∑—Ü–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ —Å–æ–∑–¥–∞–Ω—ã!")

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üöÄ –ù–ê–°–¢–†–û–ô–ö–ê STREETBURGER BOT")
    print("=" * 50)
    
    # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –±–æ—Ç–∞
    if not setup_bot():
        print("\n‚ùå –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –±–æ—Ç–∞ –Ω–µ —É–¥–∞–ª–∞—Å—å")
        sys.exit(1)
    
    # –°–æ–∑–¥–∞–Ω–∏–µ –æ–±—Ä–∞–∑—Ü–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö
    create_sample_data()
    
    print("\nüéâ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!")
    print("üìã –ß–µ–∫-–ª–∏—Å—Ç:")
    print("   ‚úÖ –ë–æ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω –∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω")
    print("   ‚úÖ Webhook —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
    print("   ‚úÖ –û–±—Ä–∞–∑—Ü–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ —Å–æ–∑–¥–∞–Ω—ã")
    print("   ‚úÖ API –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ")
    print("\nüöÄ –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–∏—Å—Ç–µ–º—É:")
    print("   python manage.py runserver")

if __name__ == '__main__':
    main() 