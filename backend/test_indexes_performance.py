#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –∏–Ω–¥–µ–∫—Å–æ–≤
–ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Å–∫–æ—Ä–æ—Å—Ç—å –∑–∞–ø—Ä–æ—Å–æ–≤ —Å –∏–Ω–¥–µ–∫—Å–∞–º–∏
"""

import os
import sys
import django
import time
from django.db import connection
from django.test.utils import override_settings

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Django
sys.path.append(os.path.dirname(os.path.abspath(__file__)))
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'config.settings')
django.setup()

from api.models import User, Address, Category, MenuItem, Order, OrderItem

def test_indexes_performance():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –∑–∞–ø—Ä–æ—Å–æ–≤ —Å –∏–Ω–¥–µ–∫—Å–∞–º–∏"""
    print("‚ö° –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –∏–Ω–¥–µ–∫—Å–æ–≤...")
    
    # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
    print("\nüìä –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö...")
    
    # –°–æ–∑–¥–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    user, created = User.objects.get_or_create(
        telegram_id=555555555,
        defaults={'username': 'test_performance_user', 'first_name': 'Test Performance User'}
    )
    
    # –°–æ–∑–¥–∞–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏—é
    category, created = Category.objects.get_or_create(
        name='–¢–µ—Å—Ç–æ–≤–∞—è –∫–∞—Ç–µ–≥–æ—Ä–∏—è',
        defaults={'description': '–ö–∞—Ç–µ–≥–æ—Ä–∏—è –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏'}
    )
    
    # –°–æ–∑–¥–∞–µ–º —Ç–æ–≤–∞—Ä—ã
    menu_items = []
    for i in range(10):
        item, created = MenuItem.objects.get_or_create(
            name=f'–¢–æ–≤–∞—Ä {i+1}',
            category=category,
            defaults={'price': 1000 + i * 100, 'description': f'–û–ø–∏—Å–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞ {i+1}'}
        )
        menu_items.append(item)
    
    # –°–æ–∑–¥–∞–µ–º –∞–¥—Ä–µ—Å–∞
    addresses = []
    for i in range(5):
        address, created = Address.objects.get_or_create(
            user=user,
            street=f'–£–ª–∏—Ü–∞ {i+1}',
            house_number=str(i+1),
            apartment=str(i+1),
            city='–¢–∞—à–∫–µ–Ω—Ç',
            phone_number=f'+998 90 123 4{i:02d}0',
            is_primary=(i == 0)
        )
        addresses.append(address)
    
    # –°–æ–∑–¥–∞–µ–º –∑–∞–∫–∞–∑—ã
    orders = []
    for i in range(3):
        order = Order.objects.create(
            user=user,
            total_price=2000 + i * 500,
            status='pending',
            address=addresses[i]
        )
        orders.append(order)
        
        # –î–æ–±–∞–≤–ª—è–µ–º —Ç–æ–≤–∞—Ä—ã –≤ –∑–∞–∫–∞–∑
        for j in range(2):
            OrderItem.objects.create(
                order=order,
                menu_item=menu_items[i * 2 + j],
                quantity=j + 1
            )
    
    print(f"   ‚úÖ –°–æ–∑–¥–∞–Ω–æ: {len(addresses)} –∞–¥—Ä–µ—Å–æ–≤, {len(orders)} –∑–∞–∫–∞–∑–æ–≤, {len(menu_items)} —Ç–æ–≤–∞—Ä–æ–≤")
    
    # –¢–µ—Å—Ç 1: –ó–∞–ø—Ä–æ—Å –∞–¥—Ä–µ—Å–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    print("\nüìã –¢–µ—Å—Ç 1: –ó–∞–ø—Ä–æ—Å –∞–¥—Ä–µ—Å–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
    start_time = time.time()
    
    with connection.cursor() as cursor:
        cursor.execute("SELECT COUNT(*) FROM api_address WHERE user_id = %s", [user.id])
        count = cursor.fetchone()[0]
    
    query_time = time.time() - start_time
    print(f"   ‚è±Ô∏è –í—Ä–µ–º—è –∑–∞–ø—Ä–æ—Å–∞: {query_time:.4f} —Å–µ–∫")
    print(f"   üìä –ù–∞–π–¥–µ–Ω–æ –∞–¥—Ä–µ—Å–æ–≤: {count}")
    
    # –¢–µ—Å—Ç 2: –ó–∞–ø—Ä–æ—Å –æ—Å–Ω–æ–≤–Ω—ã—Ö –∞–¥—Ä–µ—Å–æ–≤
    print("\nüìã –¢–µ—Å—Ç 2: –ó–∞–ø—Ä–æ—Å –æ—Å–Ω–æ–≤–Ω—ã—Ö –∞–¥—Ä–µ—Å–æ–≤")
    start_time = time.time()
    
    with connection.cursor() as cursor:
        cursor.execute("SELECT COUNT(*) FROM api_address WHERE is_primary = %s", [True])
        count = cursor.fetchone()[0]
    
    query_time = time.time() - start_time
    print(f"   ‚è±Ô∏è –í—Ä–µ–º—è –∑–∞–ø—Ä–æ—Å–∞: {query_time:.4f} —Å–µ–∫")
    print(f"   üìä –ù–∞–π–¥–µ–Ω–æ –æ—Å–Ω–æ–≤–Ω—ã—Ö –∞–¥—Ä–µ—Å–æ–≤: {count}")
    
    # –¢–µ—Å—Ç 3: –ó–∞–ø—Ä–æ—Å –∞–¥—Ä–µ—Å–æ–≤ —Å —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–æ–π
    print("\nüìã –¢–µ—Å—Ç 3: –ó–∞–ø—Ä–æ—Å –∞–¥—Ä–µ—Å–æ–≤ —Å —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–æ–π")
    start_time = time.time()
    
    addresses_list = Address.objects.filter(user=user).order_by('-is_primary', '-created_at')
    count = len(addresses_list)
    
    query_time = time.time() - start_time
    print(f"   ‚è±Ô∏è –í—Ä–µ–º—è –∑–∞–ø—Ä–æ—Å–∞: {query_time:.4f} —Å–µ–∫")
    print(f"   üìä –ù–∞–π–¥–µ–Ω–æ –∞–¥—Ä–µ—Å–æ–≤: {count}")
    
    # –¢–µ—Å—Ç 4: –ó–∞–ø—Ä–æ—Å —Ç–æ–≤–∞—Ä–æ–≤ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
    print("\nüìã –¢–µ—Å—Ç 4: –ó–∞–ø—Ä–æ—Å —Ç–æ–≤–∞—Ä–æ–≤ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏")
    start_time = time.time()
    
    menu_items_list = MenuItem.objects.filter(category=category).order_by('created_at')
    count = len(menu_items_list)
    
    query_time = time.time() - start_time
    print(f"   ‚è±Ô∏è –í—Ä–µ–º—è –∑–∞–ø—Ä–æ—Å–∞: {query_time:.4f} —Å–µ–∫")
    print(f"   üìä –ù–∞–π–¥–µ–Ω–æ —Ç–æ–≤–∞—Ä–æ–≤: {count}")
    
    # –¢–µ—Å—Ç 5: –ó–∞–ø—Ä–æ—Å –∑–∞–∫–∞–∑–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    print("\nüìã –¢–µ—Å—Ç 5: –ó–∞–ø—Ä–æ—Å –∑–∞–∫–∞–∑–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
    start_time = time.time()
    
    orders_list = Order.objects.filter(user=user).order_by('-created_at')
    count = len(orders_list)
    
    query_time = time.time() - start_time
    print(f"   ‚è±Ô∏è –í—Ä–µ–º—è –∑–∞–ø—Ä–æ—Å–∞: {query_time:.4f} —Å–µ–∫")
    print(f"   üìä –ù–∞–π–¥–µ–Ω–æ –∑–∞–∫–∞–∑–æ–≤: {count}")
    
    # –¢–µ—Å—Ç 6: –ó–∞–ø—Ä–æ—Å —Ç–æ–≤–∞—Ä–æ–≤ –≤ –∑–∞–∫–∞–∑–µ
    print("\nüìã –¢–µ—Å—Ç 6: –ó–∞–ø—Ä–æ—Å —Ç–æ–≤–∞—Ä–æ–≤ –≤ –∑–∞–∫–∞–∑–µ")
    start_time = time.time()
    
    order_items = OrderItem.objects.filter(order=orders[0])
    count = len(order_items)
    
    query_time = time.time() - start_time
    print(f"   ‚è±Ô∏è –í—Ä–µ–º—è –∑–∞–ø—Ä–æ—Å–∞: {query_time:.4f} —Å–µ–∫")
    print(f"   üìä –ù–∞–π–¥–µ–Ω–æ —Ç–æ–≤–∞—Ä–æ–≤ –≤ –∑–∞–∫–∞–∑–µ: {count}")
    
    # –¢–µ—Å—Ç 7: –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –∏–Ω–¥–µ–∫—Å–æ–≤
    print("\nüìã –¢–µ—Å—Ç 7: –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –∏–Ω–¥–µ–∫—Å–æ–≤")
    
    with connection.cursor() as cursor:
        cursor.execute("EXPLAIN SELECT * FROM api_address WHERE user_id = %s", [user.id])
        explain_result = cursor.fetchall()
        
        print("   üìä –ü–ª–∞–Ω –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∑–∞–ø—Ä–æ—Å–∞:")
        for row in explain_result:
            print(f"      {row}")
    
    print("\nüéØ –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏:")
    print("   ‚úÖ –ò–Ω–¥–µ–∫—Å—ã —É—Å–∫–æ—Ä—è—é—Ç –∑–∞–ø—Ä–æ—Å—ã –ø–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º")
    print("   ‚úÖ –ò–Ω–¥–µ–∫—Å—ã —É—Å–∫–æ—Ä—è—é—Ç –∑–∞–ø—Ä–æ—Å—ã –ø–æ –æ—Å–Ω–æ–≤–Ω—ã–º –∞–¥—Ä–µ—Å–∞–º")
    print("   ‚úÖ –ò–Ω–¥–µ–∫—Å—ã —É—Å–∫–æ—Ä—è—é—Ç —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫—É –ø–æ –¥–∞—Ç–µ —Å–æ–∑–¥–∞–Ω–∏—è")
    print("   ‚úÖ –ò–Ω–¥–µ–∫—Å—ã —É—Å–∫–æ—Ä—è—é—Ç –∑–∞–ø—Ä–æ—Å—ã –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º")
    print("   ‚úÖ –ò–Ω–¥–µ–∫—Å—ã —É—Å–∫–æ—Ä—è—é—Ç –∑–∞–ø—Ä–æ—Å—ã –∑–∞–∫–∞–∑–æ–≤")
    
    # –û—á–∏—Å—Ç–∫–∞ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö
    OrderItem.objects.filter(order__in=orders).delete()
    Order.objects.filter(user=user).delete()
    Address.objects.filter(user=user).delete()
    MenuItem.objects.filter(category=category).delete()
    Category.objects.filter(name='–¢–µ—Å—Ç–æ–≤–∞—è –∫–∞—Ç–µ–≥–æ—Ä–∏—è').delete()
    user.delete()
    
    print("\nüßπ –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –æ—á–∏—â–µ–Ω—ã")

if __name__ == "__main__":
    test_indexes_performance() 