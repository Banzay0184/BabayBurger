import React, { useEffect } from 'react';
import { useAuth } from '../context/AuthContext';
import { Button } from '../components/ui/Button';
import { LoadingSpinner } from '../components/ui/LoadingSpinner';
import { ErrorMessage } from '../components/ui/ErrorMessage';
import { TelegramUserInfo } from '../components/ui/TelegramUserInfo';
import { TelegramLoginWidget } from '../components/ui/TelegramLoginWidget';
import { DebugInfo } from '../components/ui/DebugInfo';
import { isTelegramWebApp, isInTelegramContext, getTelegramUser, createTestUrl, getTelegramTheme } from '../utils/telegram';
import { telegramAuth, testApiConnection } from '../api/auth';
import { TELEGRAM_CONFIG, getWidgetSettings } from '../config/telegram';
import type { TelegramWidgetUser } from '../types/telegram';

export const AuthPage: React.FC = () => {
  const { state, login, forceLogin, toggleDebugInfo } = useAuth();

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π —Ä–µ–∂–∏–º
  const isTestMode = new URLSearchParams(window.location.search).get('test_mode') === 'true';
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∑–∞–ø—É—â–µ–Ω–æ –ª–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –≤ –±—Ä–∞—É–∑–µ—Ä–µ (–Ω–µ –≤ Telegram)
  const isInBrowser = !isTelegramWebApp();
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω—É–∂–Ω–æ –ª–∏ –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å –≤–∏–¥–∂–µ—Ç –≤ –±—Ä–∞—É–∑–µ—Ä–µ
  const shouldShowWidget = isInBrowser && !isTestMode;
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω—É–∂–Ω–æ –ª–∏ –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å –∫–Ω–æ–ø–∫–∏ Telegram Web App
  const shouldShowTelegramButtons = isTelegramWebApp() && !isTestMode;

  // –ü–æ–ª—É—á–∞–µ–º —Ç–µ–º—É Telegram –¥–ª—è –∞–¥–∞–ø—Ç–∞—Ü–∏–∏ –≤–∏–¥–∂–µ—Ç–∞
  const telegramTheme = getTelegramTheme();
  const widgetSettings = getWidgetSettings(telegramTheme);

  // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
  useEffect(() => {
    if (!state.isAuthenticated && !state.isLoading && !state.error) {
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç Telegram –ø–µ—Ä–µ–¥ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–µ–π
      if (isInTelegramContext()) {
        login();
      }
    }
  }, [state.isAuthenticated, state.isLoading, state.error, login]);

  // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è Telegram –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
  const telegramUser = getTelegramUser();

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ —á–µ—Ä–µ–∑ Telegram Login Widget
  const handleTelegramWidgetAuth = async (widgetData: TelegramWidgetUser) => {
    try {
      console.log('Telegram Widget auth data:', widgetData);
      
      // –ò—Å–ø–æ–ª—å–∑—É–µ–º –Ω–æ–≤—É—é —Ñ—É–Ω–∫—Ü–∏—é telegramAuth
      const response = await telegramAuth(widgetData);
      
      if (response.success && response.user) {
        // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–æ–∫–µ–Ω –µ—Å–ª–∏ –µ—Å—Ç—å
        if (response.token) {
          localStorage.setItem('auth_token', response.token);
        }
        
        // –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
        login();
      }
    } catch (error: any) {
      console.error('Telegram Widget auth error:', error);
      // –û—à–∏–±–∫–∞ –±—É–¥–µ—Ç –æ–±—Ä–∞–±–æ—Ç–∞–Ω–∞ –≤ AuthContext
    }
  };

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—à–∏–±–æ–∫ –≤–∏–¥–∂–µ—Ç–∞
  const handleWidgetError = (error: string) => {
    console.error('Telegram Widget error:', error);
    // –ú–æ–∂–Ω–æ –ø–æ–∫–∞–∑–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
  };

  // –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ API
  const handleTestApi = async () => {
    try {
      console.log('–¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ API...');
      const result = await testApiConnection();
      alert(`API –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ!\n\n–û—Ç–≤–µ—Ç: ${JSON.stringify(result, null, 2)}`);
    } catch (error: any) {
      console.error('–û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è API:', error);
      alert(`–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ API:\n\n${error.message || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞'}`);
    }
  };

  // –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ URL
  const handleCreateTestUrl = () => {
    const testUrl = createTestUrl({
      id: 987654321,
      first_name: '–ò–≤–∞–Ω',
      last_name: '–ò–≤–∞–Ω–æ–≤',
      username: 'ivan_test',
      language_code: 'ru',
      is_premium: true
    });
    
    // –ö–æ–ø–∏—Ä—É–µ–º URL –≤ –±—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞
    navigator.clipboard.writeText(testUrl).then(() => {
      alert('–¢–µ—Å—Ç–æ–≤—ã–π URL —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω –≤ –±—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞!\n\n' + testUrl);
    }).catch(() => {
      alert('–¢–µ—Å—Ç–æ–≤—ã–π URL:\n\n' + testUrl);
    });
  };

  // –ï—Å–ª–∏ –∑–∞–≥—Ä—É–∑–∫–∞
  if (state.isLoading) {
    return (
      <div className="min-h-screen flex items-center justify-center bg-gray-50">
        <div className="text-center">
          <LoadingSpinner size="lg" className="mb-4" />
          <p className="text-gray-600">–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è...</p>
        </div>
      </div>
    );
  }

  // –ï—Å–ª–∏ –æ—à–∏–±–∫–∞
  if (state.error) {
    return (
      <div className="min-h-screen flex items-center justify-center bg-gray-50 p-4">
        <div className="w-full max-w-md">
          <div className="text-center mb-6">
            <h1 className="text-2xl font-bold text-gray-900 mb-2">
              Babay Burger
            </h1>
            <p className="text-gray-600">
              –î–æ—Å—Ç–∞–≤–∫–∞ –≤–∫—É—Å–Ω—ã—Ö –±—É—Ä–≥–µ—Ä–æ–≤ –≤ –ë—É—Ö–∞—Ä–µ –∏ –ö–∞–≥–∞–Ω–µ
            </p>
          </div>
          
          <ErrorMessage 
            message={state.error} 
            onRetry={login}
            className="mb-4"
          />
          
          {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ Telegram */}
          <div className="bg-blue-50 border border-blue-200 rounded-lg p-4 mb-4">
            <h3 className="font-semibold text-blue-900 mb-2">
              –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ:
            </h3>
            <div className="text-sm text-blue-800 space-y-1">
              <p>‚Ä¢ Telegram Web App: {isTelegramWebApp() ? '‚úÖ –î–æ—Å—Ç—É–ø–µ–Ω' : '‚ùå –ù–µ–¥–æ—Å—Ç—É–ø–µ–Ω'}</p>
              <p>‚Ä¢ –ö–æ–Ω—Ç–µ–∫—Å—Ç Telegram: {isInTelegramContext() ? '‚úÖ –í –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ' : '‚ùå –í–Ω–µ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞'}</p>
              <p>‚Ä¢ –î–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {state.telegramContext.hasUserData ? '‚úÖ –ï—Å—Ç—å' : '‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç'}</p>
              <p>‚Ä¢ –¢–µ–º–∞: {telegramTheme}</p>
              {isTestMode && <p>‚Ä¢ –¢–µ—Å—Ç–æ–≤—ã–π —Ä–µ–∂–∏–º: ‚úÖ –ê–∫—Ç–∏–≤–µ–Ω</p>}
            </div>
          </div>
          
          {/* –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è Telegram –µ—Å–ª–∏ –µ—Å—Ç—å */}
          {telegramUser && (
            <TelegramUserInfo user={telegramUser} className="mb-4" />
          )}
          
          {!isTelegramWebApp() && !isTestMode && (
            <div className="bg-yellow-50 border border-yellow-200 rounded-lg p-4 mb-4">
              <p className="text-sm text-yellow-800">
                –≠—Ç–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω–æ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ Telegram. 
                –û—Ç–∫—Ä–æ–π—Ç–µ –µ–≥–æ —á–µ—Ä–µ–∑ Telegram Bot –∏–ª–∏ –¥–æ–±–∞–≤—å—Ç–µ <code>?test_mode=true</code> –∫ URL –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è.
              </p>
            </div>
          )}
          
          {isTestMode && (
            <div className="bg-green-50 border border-green-200 rounded-lg p-4 mb-4">
              <p className="text-sm text-green-800">
                üß™ –¢–µ—Å—Ç–æ–≤—ã–π —Ä–µ–∂–∏–º –∞–∫—Ç–∏–≤–µ–Ω. –ò—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –º–æ–∫–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏.
              </p>
            </div>
          )}
          
          {!isInTelegramContext() && isTelegramWebApp() && !isTestMode && (
            <div className="bg-orange-50 border border-orange-200 rounded-lg p-4 mb-4">
              <p className="text-sm text-orange-800">
                –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∑–∞–ø—É—â–µ–Ω–æ –≤ Telegram, –Ω–æ –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç. 
                –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ.
              </p>
            </div>
          )}
          
          <Button 
            onClick={login} 
            className="w-full"
            loading={state.isLoading}
          >
            –ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Å–Ω–æ–≤–∞
          </Button>
        </div>
      </div>
    );
  }

  // –ï—Å–ª–∏ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω (–¥–æ–ª–∂–Ω–æ –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–∏—Ç—å –Ω–∞ –≥–ª–∞–≤–Ω—É—é)
  if (state.isAuthenticated) {
    return (
      <div className="min-h-screen flex items-center justify-center bg-gray-50">
        <div className="text-center">
          <LoadingSpinner size="lg" className="mb-4" />
          <p className="text-gray-600">–ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ...</p>
        </div>
      </div>
    );
  }

  // –ù–∞—á–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ
  return (
    <div className="min-h-screen flex items-center justify-center bg-gray-50 p-4">
      <div className="w-full max-w-md">
        <div className="text-center mb-6">
          <h1 className="text-2xl font-bold text-gray-900 mb-2">
            Babay Burger
          </h1>
          <p className="text-gray-600">
            –î–æ—Å—Ç–∞–≤–∫–∞ –≤–∫—É—Å–Ω—ã—Ö –±—É—Ä–≥–µ—Ä–æ–≤ –≤ –ë—É—Ö–∞—Ä–µ –∏ –ö–∞–≥–∞–Ω–µ
          </p>
        </div>
        
        <div className="bg-white rounded-lg shadow-sm border border-gray-200 p-6">
          <div className="text-center mb-4">
            <div className="w-16 h-16 bg-blue-500 rounded-full flex items-center justify-center mx-auto mb-4">
              <svg className="w-8 h-8 text-white" fill="currentColor" viewBox="0 0 24 24">
                <path d="M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm-2 15l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z"/>
              </svg>
            </div>
            <h2 className="text-lg font-semibold text-gray-900 mb-2">
              –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è
            </h2>
            <p className="text-sm text-gray-600">
              –í—ã–±–µ—Ä–∏—Ç–µ —Å–ø–æ—Å–æ–± –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
            </p>
          </div>
          
          {/* –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫—É –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –¥–ª—è Telegram Web App */}
          {shouldShowTelegramButtons && (
            <div className="space-y-2 mb-4">
              <Button 
                onClick={login} 
                className="w-full"
                loading={state.isLoading}
                disabled={!isInTelegramContext()}
              >
                {isInTelegramContext() ? '–í–æ–π—Ç–∏ —á–µ—Ä–µ–∑ Telegram' : '–ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é'}
              </Button>
              
              {/* –ö–Ω–æ–ø–∫–∞ –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–π –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ */}
              {!isInTelegramContext() && (
                <Button 
                  onClick={forceLogin} 
                  className="w-full"
                  loading={state.isLoading}
                  variant="secondary"
                >
                  –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è
                </Button>
              )}
            </div>
          )}
          
          {/* –ï—Å–ª–∏ –≤ –±—Ä–∞—É–∑–µ—Ä–µ - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —É–ª—É—á—à–µ–Ω–Ω—ã–π Telegram Login Widget */}
          {shouldShowWidget && (
            <TelegramLoginWidget
              botName={TELEGRAM_CONFIG.BOT_NAME}
              onAuth={handleTelegramWidgetAuth}
              onError={handleWidgetError}
              className="mb-4"
              size={widgetSettings.size}
              requestAccess={widgetSettings.requestAccess}
              lang={widgetSettings.lang}
              radius={widgetSettings.radius}
              cornerRadius={widgetSettings.cornerRadius}
              theme={widgetSettings.theme}
            />
          )}
          
          {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ */}
          <div className="bg-gray-50 rounded-lg p-4 mb-4">
            <h3 className="font-semibold text-gray-900 mb-2">
              –°—Ç–∞—Ç—É—Å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è:
            </h3>
            <div className="text-sm text-gray-600 space-y-1">
              <p>‚Ä¢ Telegram Web App: {isTelegramWebApp() ? '‚úÖ –î–æ—Å—Ç—É–ø–µ–Ω' : '‚ùå –ù–µ–¥–æ—Å—Ç—É–ø–µ–Ω'}</p>
              <p>‚Ä¢ –ö–æ–Ω—Ç–µ–∫—Å—Ç Telegram: {isInTelegramContext() ? '‚úÖ –í –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ' : '‚ùå –í–Ω–µ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞'}</p>
              <p>‚Ä¢ –î–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {state.telegramContext.hasUserData ? '‚úÖ –ï—Å—Ç—å' : '‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç'}</p>
              <p>‚Ä¢ –¢–µ–º–∞: {telegramTheme}</p>
              {isTestMode && <p>‚Ä¢ –¢–µ—Å—Ç–æ–≤—ã–π —Ä–µ–∂–∏–º: ‚úÖ –ê–∫—Ç–∏–≤–µ–Ω</p>}
            </div>
          </div>
          
          {/* –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ */}
          <DebugInfo
            logs={state.debugLogs}
            isVisible={state.showDebugInfo}
            onToggle={toggleDebugInfo}
            onClear={() => {}} // clearDebugLogs removed
            className="mt-4"
          />
          
          {/* –î–µ—Ç–∞–ª—å–Ω–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ */}
          <div className="bg-blue-50 border border-blue-200 rounded-lg p-4 mb-4">
            <h3 className="font-semibold text-blue-900 mb-2">
              –î–µ—Ç–∞–ª—å–Ω–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞:
            </h3>
            <div className="text-sm text-blue-800 space-y-1">
              <p>‚Ä¢ –í –±—Ä–∞—É–∑–µ—Ä–µ: {isInBrowser ? '‚úÖ –î–∞' : '‚ùå –ù–µ—Ç'}</p>
              <p>‚Ä¢ –í Telegram Web App: {isTelegramWebApp() ? '‚úÖ –î–∞' : '‚ùå –ù–µ—Ç'}</p>
              <p>‚Ä¢ –¢–µ—Å—Ç–æ–≤—ã–π —Ä–µ–∂–∏–º: {isTestMode ? '‚úÖ –ê–∫—Ç–∏–≤–µ–Ω' : '‚ùå –ù–µ–∞–∫—Ç–∏–≤–µ–Ω'}</p>
              <p>‚Ä¢ –ü–æ–∫–∞–∑—ã–≤–∞—Ç—å –≤–∏–¥–∂–µ—Ç: {shouldShowWidget ? '‚úÖ –î–∞' : '‚ùå –ù–µ—Ç'}</p>
              <p>‚Ä¢ –ü–æ–∫–∞–∑—ã–≤–∞—Ç—å –∫–Ω–æ–ø–∫—É: {shouldShowTelegramButtons ? '‚úÖ –î–∞' : '‚ùå –ù–µ—Ç'}</p>
              <p>‚Ä¢ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –≤–∏–¥–∂–µ—Ç–∞: {JSON.stringify(widgetSettings)}</p>
            </div>
          </div>
          
          {/* –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è Telegram –µ—Å–ª–∏ –µ—Å—Ç—å */}
          {telegramUser && (
            <TelegramUserInfo user={telegramUser} className="mb-4" />
          )}
          
          {!isTelegramWebApp() && !isTestMode && (
            <div className="bg-yellow-50 border border-yellow-200 rounded-lg p-4 mb-4">
              <p className="text-sm text-yellow-800">
                –≠—Ç–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω–æ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ Telegram. 
                –û—Ç–∫—Ä–æ–π—Ç–µ –µ–≥–æ —á–µ—Ä–µ–∑ Telegram Bot –∏–ª–∏ –¥–æ–±–∞–≤—å—Ç–µ <code>?test_mode=true</code> –∫ URL –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è.
              </p>
            </div>
          )}
          
          {isTestMode && (
            <div className="bg-green-50 border border-green-200 rounded-lg p-4 mb-4">
              <p className="text-sm text-green-800">
                üß™ –¢–µ—Å—Ç–æ–≤—ã–π —Ä–µ–∂–∏–º –∞–∫—Ç–∏–≤–µ–Ω. –ò—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –º–æ–∫–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏.
              </p>
            </div>
          )}
          
          {!isInTelegramContext() && isTelegramWebApp() && !isTestMode && (
            <div className="bg-orange-50 border border-orange-200 rounded-lg p-4 mb-4">
              <p className="text-sm text-orange-800">
                –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∑–∞–ø—É—â–µ–Ω–æ –≤ Telegram, –Ω–æ –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç. 
                –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∏–ª–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.
              </p>
            </div>
          )}
          
          {/* –ö–Ω–æ–ø–∫–∏ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è */}
          <div className="space-y-2">
            {/* –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω–∞—è –∫–Ω–æ–ø–∫–∞ –¥–ª—è —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Ä–µ–∂–∏–º–∞ */}
            {isTestMode && (
              <Button 
                onClick={login} 
                className="w-full"
                loading={state.isLoading}
              >
                –í–æ–π—Ç–∏ –≤ —Ç–µ—Å—Ç–æ–≤–æ–º —Ä–µ–∂–∏–º–µ
              </Button>
            )}
            
            {/* –ö–Ω–æ–ø–∫–∞ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ç–µ—Å—Ç–æ–≤–æ–≥–æ URL */}
            {!isTestMode && (
              <Button 
                onClick={handleCreateTestUrl} 
                className="w-full"
                variant="secondary"
              >
                üß™ –°–æ–∑–¥–∞—Ç—å —Ç–µ—Å—Ç–æ–≤—ã–π URL
              </Button>
            )}

            {/* –ö–Ω–æ–ø–∫–∞ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è API */}
            <Button 
              onClick={handleTestApi} 
              className="w-full"
              variant="secondary"
            >
              üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å API
            </Button>
          </div>
        </div>
      </div>
    </div>
  );
}; 