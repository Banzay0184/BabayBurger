import React, { useEffect } from 'react';
import { useMenu } from '../context/MenuContext';
import { MenuCategory } from '../components/menu/MenuCategory';
import { MenuFilters } from '../components/menu/MenuFilters';
import { FeaturedSection } from '../components/menu/FeaturedSection';
import { PromotionCard } from '../components/menu/PromotionCard';
import { Button } from '../components/ui/Button';
import type { MenuItem, Promotion } from '../types/menu';

export const MenuPage: React.FC = () => {
  console.log('üé¨ MenuPage component rendered');
  
  const { 
    state, 
    fetchMenu, 
    fetchPromotions,
    setFilters, 
    resetFilters, 
    getFilteredItems, 
    getAvailableCategories,
    getActivePromotions,
    getHits,
    getNewItems
  } = useMenu();

  useEffect(() => {
    console.log('üîÑ MenuPage useEffect: loading menu data...');
    console.log('üìã Functions available:', { 
      fetchMenu: typeof fetchMenu, 
      fetchPromotions: typeof fetchPromotions 
    });
    
    // –°–Ω–∞—á–∞–ª–∞ –∑–∞–≥—Ä—É–∂–∞–µ–º –º–µ–Ω—é, –ø–æ—Ç–æ–º –ø—Ä–æ–º–æ—Ü–∏–∏
    const loadData = async () => {
      await fetchMenu();
      await fetchPromotions();
    };
    
    loadData();
  }, []); // –£–±–∏—Ä–∞–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å –±–µ—Å–∫–æ–Ω–µ—á–Ω–æ–≥–æ —Ü–∏–∫–ª–∞

  const handleItemSelect = (item: MenuItem, size?: any, addOns?: any[]) => {
    // TODO: –î–æ–±–∞–≤–∏—Ç—å –≤ –∫–æ—Ä–∑–∏–Ω—É
    console.log('Selected item:', item, 'Size:', size, 'AddOns:', addOns);
  };

  const handleFiltersChange = (newFilters: Partial<typeof state.filters>) => {
    setFilters(newFilters);
  };

  const handlePromotionApply = (promotion: Promotion) => {
    // TODO: –ü—Ä–∏–º–µ–Ω–∏—Ç—å –∞–∫—Ü–∏—é –∫ –∑–∞–∫–∞–∑—É
    console.log('Applied promotion:', promotion);
  };

  const availableCategories = getAvailableCategories() || [];
  const filteredItems = getFilteredItems() || [];
  const activePromotions = getActivePromotions() || [];
  const hits = getHits() || [];
  const newItems = getNewItems() || [];

  // –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
  const totalItems = state.items.length;
  const totalCategories = availableCategories.length;
  const totalPromotions = activePromotions.length;

  // –û—Ç–ª–∞–¥–æ—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
  console.log('üì± MenuPage state:', {
    isLoading: state.isLoading,
    error: state.error,
    totalItems,
    totalCategories,
    totalPromotions,
    availableCategories: availableCategories.length,
    filteredItems: filteredItems.length,
    hits: hits.length,
    newItems: newItems.length,
    stateItems: state.items.length,
    stateCategories: state.categories.length
  });

  if (state.isLoading) {
    console.log('‚è≥ MenuPage: showing loading state');
    return (
      <div className="text-center py-16 animate-fade-in">
        <div className="relative">
          <div className="w-16 h-16 border-4 border-primary-200 border-t-primary-600 rounded-full animate-spin mx-auto mb-6"></div>
          <div className="absolute inset-0 w-16 h-16 border-4 border-transparent border-t-accent-500 rounded-full animate-spin mx-auto" style={{ animationDelay: '-0.5s' }}></div>
        </div>
        <p className="text-gray-300 text-lg font-medium">–ó–∞–≥—Ä—É–∑–∫–∞ –º–µ–Ω—é...</p>
        <p className="text-gray-500 text-sm mt-2">–ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º –≤–∫—É—Å–Ω—ã–µ –±–ª—é–¥–∞ –¥–ª—è –≤–∞—Å</p>
      </div>
    );
  }

  if (state.error) {
    return (
      <div className="text-center py-16 animate-fade-in">
        <div className="w-20 h-20 bg-gradient-to-br from-error-900/30 to-error-800/30 rounded-full flex items-center justify-center mx-auto mb-6 border border-error-700/50">
          <span className="text-3xl">‚ö†Ô∏è</span>
        </div>
        <p className="text-error-300 text-lg font-semibold mb-4">{state.error}</p>
        <Button onClick={() => fetchMenu()} variant="primary">
          <span className="flex items-center">
            <span className="mr-2">üîÑ</span>
            –ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Å–Ω–æ–≤–∞
          </span>
        </Button>
      </div>
    );
  }

  return (
    <div className="space-y-8">
      {/* –ê–∫—Ü–∏–∏ —Å —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–º –¥–∏–∑–∞–π–Ω–æ–º –¥–ª—è —Ç–µ–º–Ω–æ–π —Ç–µ–º—ã */}
      {activePromotions.length > 0 && (
        <div className="mb-10 animate-fade-in">
          <div className="flex items-center mb-6">
            <div className="w-8 h-8 bg-gradient-to-br from-accent-500 to-accent-600 rounded-full flex items-center justify-center mr-3 shadow-dark-glow">
              <span className="text-white text-sm">üéâ</span>
            </div>
            <h2 className="text-2xl font-bold text-gray-100 neon-text">
              –ê–∫—Ü–∏–∏ –∏ —Å–∫–∏–¥–∫–∏
            </h2>
          </div>
          <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
            {activePromotions.map((promotion, index) => (
              <div key={promotion.id} className="animate-fade-in" style={{ animationDelay: `${index * 0.1}s` }}>
                <PromotionCard
                  promotion={promotion}
                  onApply={handlePromotionApply}
                />
              </div>
            ))}
          </div>
        </div>
      )}

      {/* –•–∏—Ç—ã —Å —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–º –¥–∏–∑–∞–π–Ω–æ–º –¥–ª—è —Ç–µ–º–Ω–æ–π —Ç–µ–º—ã */}
      {hits.length > 0 && (
        <div className="animate-slide-up">
          <FeaturedSection
            title="üî• –•–∏—Ç—ã –ø—Ä–æ–¥–∞–∂"
            items={hits}
            onItemSelect={handleItemSelect}
          />
        </div>
      )}

      {/* –ù–æ–≤–∏–Ω–∫–∏ —Å —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–º –¥–∏–∑–∞–π–Ω–æ–º –¥–ª—è —Ç–µ–º–Ω–æ–π —Ç–µ–º—ã */}
      {newItems.length > 0 && (
        <div className="animate-slide-up" style={{ animationDelay: '0.1s' }}>
          <FeaturedSection
            title="‚ú® –ù–æ–≤–∏–Ω–∫–∏"
            items={newItems}
            onItemSelect={handleItemSelect}
          />
        </div>
      )}

      {/* –§–∏–ª—å—Ç—Ä—ã —Å —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–º –¥–∏–∑–∞–π–Ω–æ–º –¥–ª—è —Ç–µ–º–Ω–æ–π —Ç–µ–º—ã */}
      <div className="animate-slide-up" style={{ animationDelay: '0.2s' }}>
        <MenuFilters
          filters={state.filters}
          categories={availableCategories.map(cat => ({ id: cat.id, name: cat.name }))}
          onFiltersChange={handleFiltersChange}
          onReset={resetFilters}
        />
      </div>

      {/* –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ–∏—Å–∫–∞ —Å —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–º –¥–∏–∑–∞–π–Ω–æ–º –¥–ª—è —Ç–µ–º–Ω–æ–π —Ç–µ–º—ã */}
      {state.filters.search && (
        <div className="mb-10 animate-fade-in">
          <div className="flex items-center mb-6">
            <div className="w-8 h-8 bg-gradient-to-br from-primary-500 to-primary-600 rounded-full flex items-center justify-center mr-3 shadow-dark-glow">
              <span className="text-white text-sm">üîç</span>
            </div>
            <h2 className="text-xl font-bold text-gray-100 neon-text">
              –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ–∏—Å–∫–∞: "{state.filters.search}"
            </h2>
            <span className="ml-3 text-gray-400 text-sm">
              –ù–∞–π–¥–µ–Ω–æ: {filteredItems.length}
            </span>
          </div>
          <div className="grid grid-cols-1 lg:grid-cols-2 gap-6">
            {filteredItems.map((item, index) => (
              <div key={item.id} className="tg-card-modern p-6 animate-fade-in" style={{ animationDelay: `${index * 0.05}s` }}>
                <div className="flex justify-between items-start mb-3">
                  <h3 className="font-semibold text-gray-100 text-lg">{item.name}</h3>
                  <span className="font-bold text-primary-400 text-lg">{item.price} ‚ÇΩ</span>
                </div>
                <p className="text-gray-400 text-sm">{item.description}</p>
                <div className="flex gap-2 mt-3">
                  {item.is_hit && (
                    <span className="px-2 py-1 bg-warning-900/50 text-warning-300 text-xs rounded">
                      üî• –•–∏—Ç
                    </span>
                  )}
                  {item.is_new && (
                    <span className="px-2 py-1 bg-success-900/50 text-success-300 text-xs rounded">
                      ‚ú® –ù–æ–≤–∏–Ω–∫–∞
                    </span>
                  )}
                </div>
              </div>
            ))}
          </div>
          {filteredItems.length === 0 && (
            <div className="text-center py-12">
              <div className="w-16 h-16 bg-gradient-to-br from-gray-800/50 to-gray-700/50 rounded-full flex items-center justify-center mx-auto mb-4 border border-gray-600/50">
                <span className="text-2xl">üîç</span>
              </div>
              <p className="text-gray-300 text-lg font-medium">
                –ü–æ –≤–∞—à–µ–º—É –∑–∞–ø—Ä–æ—Å—É –Ω–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ
              </p>
              <p className="text-gray-500 text-sm mt-2">
                –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å –ø–æ–∏—Å–∫–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å
              </p>
            </div>
          )}
        </div>
      )}

      {/* –ö–∞—Ç–µ–≥–æ—Ä–∏–∏ –º–µ–Ω—é —Å —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–º –¥–∏–∑–∞–π–Ω–æ–º –¥–ª—è —Ç–µ–º–Ω–æ–π —Ç–µ–º—ã */}
      {!state.filters.search && (
        <div className="animate-fade-in">
          {availableCategories.length > 0 ? (
            <>
              <div className="mb-8">
                <h2 className="text-2xl font-bold text-gray-100 neon-text mb-2">
                  –ö–∞—Ç–µ–≥–æ—Ä–∏–∏ –º–µ–Ω—é
                </h2>
                <p className="text-gray-400">
                  –í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –±–ª—é–¥
                </p>
              </div>
              {availableCategories.map((category, index) => (
                <div key={category.id} style={{ animationDelay: `${index * 0.1}s` }}>
                  <MenuCategory
                    category={category}
                    onItemSelect={handleItemSelect}
                  />
                </div>
              ))}
            </>
          ) : (
            <div className="text-center py-16">
              <div className="w-20 h-20 bg-gradient-to-br from-gray-800/50 to-gray-700/50 rounded-full flex items-center justify-center mx-auto mb-6 border border-gray-600/50">
                <span className="text-3xl">üçΩÔ∏è</span>
              </div>
              <p className="text-gray-300 text-lg font-medium mb-2">
                –í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –º–µ–Ω—é –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ
              </p>
              <p className="text-gray-500 text-sm mb-6">
                –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ –∏–ª–∏ —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –Ω–∞–º–∏
              </p>
              <Button onClick={() => fetchMenu()} variant="primary">
                <span className="flex items-center">
                  <span className="mr-2">üîÑ</span>
                  –û–±–Ω–æ–≤–∏—Ç—å –º–µ–Ω—é
                </span>
              </Button>
            </div>
          )}
        </div>
      )}
    </div>
  );
}; 